{"version":3,"sources":["footer/footer.jsx","endPoins.jsx","services/logServices.jsx","services/httpServices.jsx","homePage/liveDot.jsx","loader.jsx","services/userService.jsx","loader copy.jsx","services/authServices.jsx","homePage/popUp.jsx","inPlay/inPlayHelper.jsx","login/inputHelp.jsx","login/transaction.jsx","login/deposite.jsx","login/withDraw.jsx","homePage/homePage.jsx","navBar/navBar.jsx","login/loginRegister.jsx","login/login.jsx","login/register.jsx","notification/notification.jsx","profile/onriginalProfile.jsx","profile/navBarProfile.jsx","404.jsx","profile/profile.jsx","statement/statementNavbar.jsx","profile/bettings.jsx","profile/paginatin.jsx","profile/paginationHelper.jsx","profile/allTransactions.jsx","footer/speacialNavbar.jsx","login/transfer.jsx","statement/sponser.jsx","login/logout.jsx","gameEditor/popUp.jsx","gameEditor/gameHepler.jsx","gameEditor/createMatch.jsx","gameEditor/updateMatch copy.jsx","gameEditor/createMatchQuestion.jsx","gameEditor/gameEditor.jsx","club/clubUser.jsx","club/clubProfile.jsx","club/statement.jsx","App.js","reportWebVitals.js","index.js"],"names":["Footer","state","year","date","Date","this","setState","getFullYear","style","maxWidth","textDecoration","marginTop","className","Component","apiEndPoint","lastPart","logger","init","log","error","console","axios","interceptors","response","use","status","toast","Promise","reject","http","setJwt","jwt","defaults","headers","common","get","post","put","delete","patch","setJwtForClub","LiveDot","color","fontSize","Loader","register","username","password","phoneNumber","fullName","clubName","sponserName","email","phone","first_name","user_club","referer_username","login","loginClub","getJwt","localStorage","getItem","Loader2","zIndex","tokenKey","getUserByJwt","jwtDecode","ex","getCurrentUser","getCurrentClub","BitPopUP","detailsOfBet","currentBettingRate","question","betFor","id","option","userDetails","userId","userBettingAmount","userWinningPrice","someOption","value","isDisable","doSubmit","e","a","preventDefault","bet_scope","choice","amount","success","data","err","non_field_errors","detail","handleChange","newBet","Math","floor","currentTarget","parseFloat","addValue","parseInt","res","props","idx","toString","trim","tabIndex","role","onSubmit","type","min","max","onChange","minWidth","placeholder","backgroud","map","background","marginRight","onClick","InPlayHelper","option_1","option_1_rate","option_2","option_2_rate","option_3","option_3_rate","option_4","option_4_rate","is_locked","is_live","hide","Input","errors","restProps","htmlFor","marginBottom","autoComplete","TransactionForm","input","name","handleClickOfoption","validate","Joi","schema","abortEarly","details","item","path","message","handleSubmit","Deposite","method","account","transaction_id","superuser_account","methodOption","to_show","numbers","number","string","required","label","getNumbersFromId","d","window","location","methods","target","WithDeaw","HomePage","allData","nameOfMatchId","currentGameName","gameName","itemCount","announcement","currentGameData","liveGameId","upcommingGameId","liveGameData","upcommingGameData","matchesQuestion","matchId","isLoading","isLive","user","compare","b","handleFilter","newData","liveGameItems","upcommingGameItems","game_name","toLowerCase","includes","push","length","filteredForLive","datapak","results","sort","match","item1","item2","admin","breakpoints","slidesPerView","spaceBetween","toLocaleLowerCase","text","expired","title","start_time","fontWeight","display","split","substring","Navbar","balance","game_editor","currentUserData","width","height","to","float","toFixed","LoginRegister","validateProperty","obj","errorMessage","Login","isClub","setItem","Register","reTypepassword","allClube","alphanum","allow","promise","Notification","index","serial","scope","slice","created_at","OriginalProfile","referred_by","last_name","is_club_admin","refer_set","last_login","is_superuser","is_staff","is_active","date_joined","updateUserDetails","dataOfUser","earn_from_refer","club_detail","src","alt","NavBarProfile","Error404","Profile","NavBarStatement","Betting","tableHead","header","tableData","choiced","win","Pagination","itemsCount","pageSize","currentPage","onPageChange","onPageChange2","pagesCount","ceil","pages","_","range","disabled","page","paginate","items","pageNumber","startIndex","take","AllTransactions","currentMethodName","methodName","currentMethodData","betData","currentShowData","handlePageChange","handlePageChange2","handelDelete","amiPagol","filtered","data1","toUpperCase","overflowX","margin","user_balance","match_start_time","scrollbarWidth","cursor","description","match_name","return_rate","winning","your_answer","is_winner","answer","SeacialNavbar","Transfer","options","handleChange2","selectedOption","Sponsor","Logout","removeItem","BetUpdate","locked","lock","bool","step","GameHelper","onClickHide","onClickLock","option1_benefit","option1_bet","option1_bet_count","option2_benefit","option2_bet","option2_bet_count","option3_benefit","option3_bet","option3_bet_count","option4_benefit","option4_bet","option4_bet_count","overflow","CreateMatch","matchData","end_time","matchType","time","moment","format","time2","reload","UpdateMatch","CreateMatchQuestion","LiveGameEditor","currentGameId","ClubUser","join_date","last_bet","full_name","total_bet","total_commission","ClubProfile","StatementClub","data2","debit","credit","club_balance","user_details","App","minHeight","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16f9da3e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Footer extends Component {\n  state = {\n    year: \"\",\n  };\n  componentDidMount() {\n    const date = new Date();\n    this.setState({ year: date.getFullYear() });\n\n  }\n\n  render() {\n    return (\n      <footer\n        style={{ maxWidth: \"100%\", textDecoration: \"none\", marginTop: \"5px\" }}\n      >\n        <div className=\"container mt-2\">\n          <div className=\"layout-justify\">\n            <p className=\"rights\">\n              <span className=\"icofont-bird-wings red\"> Win24</span>\n              <span>&nbsp;©&nbsp;</span>\n              <span className=\"copyright-year\">2017-{this.state.year}</span>\n              <span>&nbsp;</span>\n            </p>\n          </div>\n        </div>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","export function apiEndPoint(lastPart) {\n  return \"https://b202et.herokuapp.com/\" + lastPart;\n}\n","function init() {}\n\nfunction log(error) {\n  console.error(error);\n}\n\nconst logger = {\n  init,\n  log,\n};\nexport default logger;\n","import axios from \"axios\";\nimport logger from \"./logServices\";\nimport { toast } from \"react-toastify\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    toast.error(\"An unexpected error occurrred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nfunction setJwtForClub(jwt) {\n  axios.defaults.headers.common[\"club-token\"] = jwt;\n}\n\nconst http = {\n  setJwt,\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  patch: axios.patch,\n  setJwtForClub,\n};\nexport default http;\n","import React, { Component } from \"react\";\nclass LiveDot extends Component {\n  state = {};\n  render() {\n    return (\n      <span style={{ color: \"green\",fontSize:\"20px\" }}>\n        <span className=\"loader__dot\">.</span>\n        <span className=\"loader__dot\">.</span>\n        <span className=\"loader__dot\">.</span>\n      </span>\n    );\n  }\n}\n\nexport default LiveDot;\n","import React, { Component } from \"react\";\nimport \"./loader.css\";\nimport LiveDot from \"./homePage/liveDot\";\nclass Loader extends Component {\n  render() {\n    return (\n      <div className=\"loaderBox \">\n        <span className=\"icofont-bird-wings\"></span>\n        <p>\n          <LiveDot />\n        </p>\n\n      </div>\n    );\n  }\n}\n\nexport default Loader;\n","import { apiEndPoint } from \"../endPoins\";\nimport http from \"../services/httpServices\";\nexport function register({\n  username,\n  password,\n  phoneNumber,\n  fullName,\n  clubName,\n  sponserName,\n  email,\n}) {\n  return http.post(apiEndPoint(\"api/register/\"), {\n    username: username,\n    phone: phoneNumber,\n    password: password,\n    first_name: fullName,\n    user_club: clubName,\n    email: email,\n    referer_username: sponserName,\n  });\n}\n\nexport function login({ username, password }) {\n  return http.post(apiEndPoint(\"api/login/\"), {\n    username,\n    password,\n  });\n}\nexport function loginClub({ username, password }) {\n  return http.post(apiEndPoint(\"api/login-club/\"), {\n    username,\n    password,\n  });\n}\n\nexport function getJwt() {\n  return localStorage.getItem(\"token\");\n}\n","import React, { Component } from \"react\";\nimport \"./loader.css\";\nimport LiveDot from \"./homePage/liveDot\";\nclass Loader2 extends Component {\n  render() {\n    return (\n      <div\n        className=\"loaderBox2 \"\n        style={{ zIndex: \"11111111111111111111111111111111111\" }}\n      >\n        <span className=\"icofont-bird-wings\"></span>\n        <p>\n          <LiveDot />\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Loader2;\n","import jwtDecode from \"jwt-decode\";\nimport { apiEndPoint } from \"../endPoins\";\nimport http from \"./httpServices\";\n\nconst tokenKey = \"token\";\n\nhttp.setJwt(localStorage.getItem(tokenKey));\nhttp.setJwtForClub(localStorage.getItem(tokenKey));\n// export async function login(email, password) {\n//   const { data: jwt } = await http.post(apiEndpoint(\"api/login/\"), {\n//     email,\n//     password,\n//   });\n//   localStorage.setItem(tokenKey, jwt);\n// }\nexport function init() {}\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getUserByJwt() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\nexport function getCurrentUser() {\n  try {\n    return http.get(apiEndPoint(\"api/user-detail-update/\"));\n  } catch (ex) {\n    return null;\n  }\n}\nexport function getCurrentClub() {\n  try {\n    return http.get(apiEndPoint(\"api/login-club/\"));\n  } catch (ex) {\n    return null;\n  }\n}\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\nconst auth = {\n  // login,\n  loginWithJwt,\n  getCurrentClub,\n  logout,\n  getCurrentUser,\n  getJwt,\n};\nexport default auth;\n","import React, { Component } from \"react\";\nimport LiveDot from \"./liveDot\";\nimport { apiEndPoint } from \"../endPoins\";\nimport { getJwt } from \"../services/userService\";\nimport { toast } from \"react-toastify\";\nimport Loader2 from \"../loader copy\";\nimport http from \"../services/httpServices\";\nimport { getUserByJwt } from \"../services/authServices\";\nhttp.setJwtForClub(getJwt());\nhttp.setJwt(getJwt());\nclass BitPopUP extends Component {\n  state = {\n    detailsOfBet: {\n      currentBettingRate: \"\",\n      question: \"\",\n      betFor: \"\",\n      id: \"\",\n      option: \"\",\n    },\n\n    userDetails: {\n      userId: \"\",\n      userBettingAmount: 0,\n      userWinningPrice: 0,\n    },\n    someOption: [\n      { id: 1, value: 100 },\n      { id: 2, value: 200 },\n      { id: 3, value: 500 },\n      { id: 4, value: 1000 },\n      { id: 5, value: 10000 },\n    ],\n    isDisable: false,\n  };\n\n  componentDidMount() {\n    const res = this.props;\n    this.setState({ detailsOfBet: res });\n  }\n\n  doSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const { email } = getUserByJwt();\n\n\n\n      if (!email) {\n        toast.error(\"You are not allow to bet\");\n        return;\n      }\n    } catch (err) {}\n\n    this.setState({ isDisable: true });\n\n    try {\n      const { userBettingAmount } = this.state.userDetails;\n      const { id, option } = this.state.detailsOfBet;\n      await http.post(apiEndPoint(\"api/bet/\"), {\n        bet_scope: id,\n        choice: option,\n        amount: userBettingAmount,\n      });\n\n      toast.success(\"Your Bet place Has Success\");\n    } catch (err) {\n      try {\n        try {\n          toast.error(err.response.data.bet_scope[0]);\n        } catch (err) {}\n        try {\n          toast.error(err.response.data.non_field_errors[0]);\n        } catch (err) {}\n        try {\n          toast.error(err.response.data.detail);\n        } catch (err) {}\n      } catch (err) {\n        toast.error(\"Maybe You are not Loged in !\");\n      }\n    }\n    this.setState({ isDisable: false });\n  };\n\n  handleChange = (e) => {\n    const userDetails = { ...this.state.userDetails };\n    let newBet = Math.floor(e.currentTarget.value);\n    if (newBet < 0) {\n      newBet = 0;\n    }\n    if (newBet > 100000) {\n      newBet = 100000;\n    }\n    userDetails.userBettingAmount = newBet;\n    userDetails.userWinningPrice = Math.floor(\n      newBet * parseFloat(this.state.detailsOfBet.currentBettingRate)\n    );\n    this.setState({ userDetails });\n  };\n  addValue = (value) => {\n    const userDetails = { ...this.state.userDetails };\n    userDetails.userBettingAmount = parseInt(value);\n    userDetails.userWinningPrice = Math.floor(\n      parseInt(value) * parseFloat(this.state.detailsOfBet.currentBettingRate)\n    );\n    this.setState({ userDetails });\n  };\n  render() {\n    const { userBettingAmount, userWinningPrice } = this.state.userDetails;\n    const { currentBettingRate, question, betFor } = this.state.detailsOfBet;\n    const { id: idx, option } = this.props;\n\n    return (\n      <>\n        {\" \"}\n        {this.state.isDisable && <Loader2 />}\n        <div\n          className=\"modal modal-sport fade\"\n          id={(\n            \"sportModal\" +\n            idx.toString().trim() +\n            option.toString().trim()\n          ).trim()}\n          tabIndex=\"-1\"\n          aria-labelledby=\"sportModalTitle\"\n          role=\"dialog\"\n          aria-hidden=\"true\"\n        >\n          <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n            <div className=\"modal-content\">\n              <form onSubmit={this.doSubmit}>\n                <div className=\"modal-header\">\n                  <h5 className=\"modal-title\" id=\"sportModalTitle\">\n                    Placing a bet\n                  </h5>\n                  <button type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span className=\"icofont-ui-close btn-my\"></span>\n                  </button>\n                </div>\n                <div className=\"modal-body\">\n                  <p className=\"modal-sport-confrontation\">{question}</p>\n                  <p className=\"modal-sport-wager-title\">\n                    <span className=\"modal-sport-wager\">{betFor}</span>{\" \"}\n                    <span className=\"modal-sport-wager-count\">\n                      {currentBettingRate}\n                    </span>\n                  </p>\n\n                  <p className=\"modal-sport-live\">\n                    <span>\n                      Bet Now <LiveDot />\n                    </span>\n                  </p>\n                  <div className=\"stepper-sport\">\n                    <div className=\"stepper \">\n                      <input\n                        className=\"form-input stepper-input\"\n                        type=\"number\"\n                        data-zeros=\"true\"\n                        min=\"100\"\n                        max=\"100000\"\n                        value={userBettingAmount}\n                        onChange={this.handleChange}\n                        style={{ maxWidth: \"200px\", minWidth: \"150px\" }}\n                        placeholder=\"$\"\n                      />\n                    </div>\n                    <div\n                      className=\"liveBox2 container mb-2\"\n                      style={{ backgroud: \"white\" }}\n                    >\n                      {this.state.someOption.map(({ id, value }) => {\n                        return (\n                          <span\n                            className=\"badge badge-light btn mr-2\"\n                            key={id}\n                            value={id}\n                            style={{\n                              background: \"green\",\n                              fontSize: \"12px\",\n                              marginRight: \"5px\",\n                              marginTop: \"10px\",\n                            }}\n                            onClick={() => this.addValue(value)}\n                          >\n                            {value}\n                          </span>\n                        );\n                      })}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"modal-footer\">\n                  <p className=\"modal-sport-stake\">\n                    <span className=\"modal-sport-stake-left\">Stake</span>\n                    <span className=\"modal-sport-stake-right\">\n                      {userBettingAmount}\n                    </span>\n                  </p>\n                  <p className=\"modal-sport-win\">\n                    <span className=\"modal-sport-win-left\">Winnings</span>\n                    <span className=\"modal-sport-win-right\">\n                      {userWinningPrice}\n                    </span>\n                  </p>\n                  <button\n                    className={\n                      this.state.isDisable\n                        ? \"modal-sport-place button button-primary button-block disabledEverything specialBtn\"\n                        : \"modal-sport-place button button-primary button-block\"\n                    }\n                  >\n                    place bet\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default BitPopUP;\n","import React, { Component } from \"react\";\nimport LiveDot from \"../homePage/liveDot\";\nimport BitPopUP from \"../homePage/popUp\";\n\nclass InPlayHelper extends Component {\n  render() {\n    const {\n      question,\n      option_1,\n      option_1_rate,\n      option_2,\n      option_2_rate,\n      option_3,\n      option_3_rate,\n      option_4,\n      option_4_rate,\n      is_locked,\n      id,\n      is_live,\n      hide,\n    } = this.props;\n\n    return (\n      <>\n        {!hide && (\n          <>\n            <div className={is_locked ? \" disabled\" : \"\"}>\n              <div className=\"accordion\" id=\"accordionExample\">\n                <div className=\"sport-table-header2\">\n                  <span\n                    type=\"button\"\n                    data-bs-toggle=\"collapse\"\n                    data-bs-target=\"#collapseOne\"\n                    aria-expanded=\"true\"\n                    aria-controls=\"collapseOne\"\n                  >\n                    <div\n                      className={\"sport-table-header2 \"}\n                      data-toggle=\"collapse\"\n                      data-target={\"#collapseOne\" + id + question + option_1}\n                      aria-expanded=\"true\"\n                      aria-controls={\"collapseOne\" + id + question + option_1}\n                    >\n                      <span>\n                        {is_locked && <span className=\"icofont-lock\"></span>}\n                        {!is_locked && (\n                          <span className=\"icofont-ui-unlock\" />\n                        )}{\" \"}\n                        {question}\n                        {is_live && (\n                          <>\n                            <span className=\"bg\">\n                              LIVE <LiveDot />\n                            </span>\n                          </>\n                        )}\n                        {!is_live && (\n                          <>\n                            <span className=\"bg\">\n                              UPCOMING <LiveDot />\n                            </span>\n                          </>\n                        )}\n                      </span>\n                    </div>\n                  </span>\n\n                  <div\n                    id=\"collapseOne\"\n                    className=\"accordion-collapse collapse show\"\n                    aria-labelledby=\"headingOne\"\n                    data-bs-parent=\"#accordionExample\"\n                  >\n                    <div className=\"panel-body\">\n                      <div className=\"sport-table-wager\">\n                        {option_1 && (\n                          <>\n                            <span\n                              className=\"sport-table-wager-button\"\n                              data-toggle=\"modal\"\n                              data-target={(\n                                \"#sportModal\" +\n                                id.toString().trim() +\n                                \"option_1\"\n                              ).trim()}\n                            >\n                              <span>{option_1}</span>\n                              <span className=\"sport-table-wager-button-count\">\n                                {option_1_rate}\n                              </span>\n                            </span>\n                            <BitPopUP\n                              id={id}\n                              option={\"option_1\"}\n                              betFor={option_1}\n                              currentBettingRate={option_1_rate}\n                              question={question}\n                            />\n                          </>\n                        )}\n                        {option_2 && (\n                          <>\n                            <span\n                              className=\"sport-table-wager-button\"\n                              data-toggle=\"modal\"\n                              data-target={(\n                                \"#sportModal\" +\n                                id.toString().trim() +\n                                \"option_2\"\n                              ).trim()}\n                            >\n                              <span>{option_2}</span>\n                              <span className=\"sport-table-wager-button-count\">\n                                {option_2_rate}\n                              </span>\n                            </span>\n                            <BitPopUP\n                              id={id}\n                              option={\"option_2\"}\n                              betFor={option_2}\n                              currentBettingRate={option_2_rate}\n                              question={question}\n                            />\n                          </>\n                        )}\n                        {option_3 && (\n                          <>\n                            <span\n                              className=\"sport-table-wager-button\"\n                              data-toggle=\"modal\"\n                              data-target={(\n                                \"#sportModal\" +\n                                id.toString().trim() +\n                                \"option_2\"\n                              ).trim()}\n                            >\n                              <span>{option_3}</span>\n                              <span className=\"sport-table-wager-button-count\">\n                                {option_3_rate}\n                              </span>\n                            </span>\n                            <BitPopUP\n                              id={id}\n                              option={\"option_3\"}\n                              betFor={option_3}\n                              currentBettingRate={option_3_rate}\n                              question={question}\n                            />\n                          </>\n                        )}\n                        {option_4 && (\n                          <>\n                            <span\n                              className=\"sport-table-wager-button\"\n                              data-toggle=\"modal\"\n                              data-target={(\n                                \"#sportModal\" +\n                                id.toString().trim() +\n                                \"option_4\"\n                              ).trim()}\n                            >\n                              <span>{option_4}</span>\n                              <span className=\"sport-table-wager-button-count\">\n                                {option_4_rate}\n                              </span>\n                            </span>\n                            <BitPopUP\n                              id={id}\n                              option={\"option_4\"}\n                              betFor={option_4}\n                              currentBettingRate={option_4_rate}\n                              question={question}\n                            />\n                          </>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default InPlayHelper;\n","export const Input = ({ type = \"text\", placeholder, errors, ...restProps }) => {\n  return (\n    <div className=\"form-group \">\n      <label htmlFor={placeholder} style={{ marginBottom: \"10px\" }}>\n        {placeholder}\n      </label>\n      <input\n        autoComplete=\"off\"\n        className=\"form-control\"\n        type={type}\n        {...restProps}\n        placeholder={placeholder}\n       \n      />\n      <small id=\"emailHelp\" className=\"form-text text-warning\">\n        {errors}\n      </small>\n    </div>\n  );\n};\n","import  { Component } from \"react\";\nimport Joi from \"joi-browser\";\nclass TransactionForm extends Component {\n  handleChange = ({ currentTarget: input }) => {\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    try {\n      this.handleClickOfoption(input);\n    } catch (e) {}\n    this.setState({ data });\n  };\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n\n    if (errors) return;\n    this.doSubmit();\n  };\n}\n\nexport default TransactionForm;\n","import React from \"react\";\nimport { Input } from \"./inputHelp\";\nimport { apiEndPoint } from \"../endPoins\";\nimport http from \"../services/httpServices\";\nimport TransactionForm from \"./transaction\";\nimport { toast } from \"react-toastify\";\nimport Joi from \"joi-browser\";\nimport { getJwt } from \"../services/authServices\";\nhttp.setJwt(getJwt());\nclass Deposite extends TransactionForm {\n  state = {\n    data: {\n      method: \"\",\n      amount: 0,\n      account: \"\",\n      transaction_id: \"\",\n      superuser_account: \"\",\n    },\n    errors: {\n      method: null,\n      amount: null,\n      transaction_id: null,\n      account: null,\n      superuser_account: null,\n    },\n\n    methodOption: [\n      {\n        id: \"\",\n        to_show: \"\",\n      },\n    ],\n    numbers: [\n      {\n        id: \"\",\n        number: \"\",\n      },\n    ],\n  };\n  schema = {\n    method: Joi.string().required().label(\"Method\"),\n    amount: Joi.number().min(100).required().label(\"Amount\"),\n    transaction_id: Joi.string().min(8).required().label(\"Transaction Id\"),\n    superuser_account: Joi.string().min(11).max(12).required().label(\"From \"),\n    account: Joi.string().required().label(\"Account\"),\n  };\n  async componentDidMount() {\n    try {\n      const res = await http.get(\n        apiEndPoint(\"api/transactions/available_methods/\")\n      );\n\n      this.setState({ methodOption: res.data.methods });\n      const target = res.data.methods[0][\"id\"];\n      this.handleClickOfoption(target);\n    } catch (e) {\n      toast.error(\"Method Option Error\");\n    }\n  }\n  handleClickOfoption = ({ value }) => {\n    const res = this.getNumbersFromId(value, this.state.methodOption);\n    if (res) {\n      this.setState({ numbers: res });\n    }\n  };\n  getNumbersFromId = (id, data) => {\n    for (let d of data) {\n      if (d.id === id) return d.numbers;\n    }\n    return null;\n  };\n  doSubmit = async (e) => {\n    try {\n       await http.post(apiEndPoint(\"api/deposit/\"), this.state.data);\n      toast.success(\"Your request has been success\");\n      window.location = \"/profile\";\n    } catch (err) {\n      if (err.response && err.response.status === 400) {\n        const errors = { ...this.state.errors };\n        try {\n          errors.amount = err.response.data.amount[0];\n        } catch (err) {}\n\n        try {\n          errors.amount = err.response.data.non_field_errors[0];\n          toast.error(err.response.data.non_field_errors[0]);\n        } catch (err) {}\n\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    const { account, amount, transaction_id } = this.state.data;\n\n    const { methodOption, numbers, errors } = this.state;\n    return (\n      <div className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" id=\"Deposit\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\" style={{ background: \"green\" }}>\n              <h5 className=\"modal-title\">Deposit</h5>\n              <button\n                type=\"button\"\n                className=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span className=\"icofont-ui-close btn-my\"></span>{\" \"}\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <form\n                className=\"rd-form rd-mailform\"\n                onSubmit={this.handleSubmit}\n              >\n                <div className=\"form-input form-group mb-2\">\n                  <label htmlFor=\"exampleFormControlSelect1\">\n                    Select Method\n                  </label>\n                  <select\n                    className=\"form-control\"\n                    name=\"method\"\n                    onChange={this.handleChange}\n                  >\n                    <option key=\"n/a\" value=\"N/A\">\n                      Select Method\n                    </option>\n                    {methodOption.map(({ id }) => {\n                      return (\n                        <option value={id} key={id}>\n                          {id}\n                        </option>\n                      );\n                    })}\n                  </select>\n                  <small id=\"emailHelp\" className=\"form-text text-warning\">\n                    {errors.method}\n                  </small>\n                </div>\n                <div className=\"form-input form-group mb-2\">\n                  <label htmlFor=\"exampleFormControlSelect1\">\n                    Select Number\n                  </label>\n                  <select\n                    className=\"form-control\"\n                    name=\"superuser_account\"\n                    onChange={this.handleChange}\n                  >\n                    <option key=\"n/a\" value=\"N/A\">\n                      Select Number\n                    </option>\n                    {numbers.map(({ id, number }) => {\n                      return (\n                        <option value={number} key={id}>\n                          {number}\n                        </option>\n                      );\n                    })}\n                  </select>\n                  <small id=\"emailHelp\" className=\"form-text text-warning\">\n                    {errors.superuser_account}\n                  </small>\n                </div>\n                <Input\n                  placeholder=\"Enter Amount\"\n                  name=\"amount\"\n                  value={amount}\n                  onChange={this.handleChange}\n                  type=\"number\"\n                  errors={errors.amount}\n                />\n                <Input\n                  placeholder=\"From\"\n                  name=\"account\"\n                  value={account}\n                  type=\"number\"\n                  onChange={this.handleChange}\n                  errors={errors.account}\n                />\n                <Input\n                  placeholder=\"transaction Id\"\n                  name=\"transaction_id\"\n                  value={transaction_id}\n                  onChange={this.handleChange}\n                  errors={errors.transaction_id}\n                />\n                <button\n                  className=\"button button-lg button-primary button-block\"\n                  type=\"submit\"\n                >\n                  Deposit\n                </button>\n              </form>{\" \"}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Deposite;\n","import React from \"react\";\nimport { Input } from \"./inputHelp\";\nimport { apiEndPoint } from \"../endPoins\";\nimport { getJwt } from \"../services/userService\";\nimport TransactionForm from \"./transaction\";\nimport Joi from \"joi-browser\";\nimport http from \"../services/httpServices\";\nimport { toast } from \"react-toastify\";\nhttp.setJwt(getJwt());\nclass WithDeaw extends TransactionForm {\n  state = {\n    data: {\n      type: \"withdraw\",\n\n      method: \"\",\n\n      amount: \"0\",\n\n      account: \"\",\n    },\n    errors: {\n      method: null,\n      amount: null,\n      type: null,\n      account: null,\n    },\n    type: [{ id: \"1\", option: \"Personal\" }],\n    methodOption: [\n      {\n        id: \"bkash\",\n        to_show: \"BKash personal\",\n      },\n    ],\n  };\n  schema = {\n    method: Joi.string().required().label(\"Method\"),\n    amount: Joi.number().min(100).required().label(\"Amount\"),\n    account: Joi.string().min(11).max(12).required().label(\"Account\"),\n    type: Joi.string().required(),\n  };\n  async componentDidMount() {\n    try {\n      const res = await http.get(\n        apiEndPoint(\"api/transactions/available_methods/\")\n      );\n      this.setState({ methodOption: res.data.methods });\n      const target = res.data.methods[0][\"id\"];\n      this.handleClickOfoption(target);\n    } catch (e) {\n      toast.error(\"Method Option Error\");\n    }\n  }\n  handleClickOfoption = ({ value }) => {\n    const res = this.getNumbersFromId(value, this.state.methodOption);\n    if (res) {\n      this.setState({ numbers: res });\n    }\n  };\n  getNumbersFromId = (id, data) => {\n    for (let d of data) {\n      if (d.id === id) return d.numbers;\n    }\n    return null;\n  };\n  doSubmit = async (e) => {\n    try {\n      await http.post(apiEndPoint(\"api/withdraw/\"), this.state.data);\n      toast.success(\"Your request has been success\");\n      window.location = \"/profile\";\n    } catch (err) {\n      if (err.response && err.response.status === 400) {\n        const errors = { ...this.state.errors };\n        try {\n          errors.amount = err.response.data.non_field_errors[0];\n        } catch (err) {}\n        try {\n          errors.amount = err.response.data.amount[0];\n        } catch (err) {}\n        this.setState({ errors });\n      }\n    }\n  };\n  render() {\n    const { amount, account } = this.state.data;\n    const { methodOption, errors } = this.state;\n    return (\n      <>\n        <div className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" id=\"WithDeaw\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\" style={{ background: \"green\" }}>\n                <h5 className=\"modal-title\">Withdraw</h5>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                >\n                  <span className=\"icofont-ui-close btn-my\"></span>{\" \"}\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form\n                  className=\"rd-form rd-mailform\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div className=\"form-input form-group mb-2\">\n                    <label htmlFor=\"exampleFormControlSelect1\">\n                      Select Method\n                    </label>\n                    <select\n                      className=\"form-control\"\n                      name=\"method\"\n                      onChange={this.handleChange}\n                    >\n                      <option key=\"N/A\"> Select Method</option>\n                      {methodOption.map(({ id, to_show }) => {\n                        return (\n                          <option value={id} key={id}>\n                            {id}\n                          </option>\n                        );\n                      })}\n                    </select>\n                    <small id=\"emailHelp\" className=\"form-text text-warning\">\n                      {errors.method}\n                    </small>\n                  </div>\n                  <div className=\"form-input form-group\">\n                    <label htmlFor=\"exampleFormControlSelect1\">\n                      Account Type\n                    </label>\n                    <select className=\"form-control\">\n                      <option key=\"N/A\">Account Type</option>\n                      {this.state.type.map(({ id, option }) => {\n                        return (\n                          <option\n                            onClick={this.handleChange}\n                            value={option}\n                            key={id}\n                          >\n                            {option}\n                          </option>\n                        );\n                      })}\n                    </select>\n                    <small id=\"emailHelp\" className=\"form-text text-warning\">\n                      {errors.type}\n                    </small>\n                  </div>\n\n                  <Input\n                    placeholder=\"Enter Amount\"\n                    name=\"amount\"\n                    value={amount}\n                    type=\"number\"\n                    min=\"100\"\n                    onChange={this.handleChange}\n                    errors={errors.amount}\n                  />\n                  <Input\n                    placeholder=\"To\"\n                    name=\"account\"\n                    value={account}\n                    type=\"number\"\n                    onChange={this.handleChange}\n                    errors={errors.account}\n                  />\n\n                  <button\n                    className=\"button button-lg button-primary button-block\"\n                    type=\"submit\"\n                  >\n                    WithDeaw\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default WithDeaw;\n","import React, { Component } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { apiEndPoint } from \"../endPoins\";\nimport \"./homePage.css\";\nimport http from \"../services/httpServices\";\nimport Loader from \"../loader\";\nimport InPlayHelper from \"../inPlay/inPlayHelper\";\nimport Deposite from \"../login/deposite\";\nimport WithDeaw from \"../login/withDraw\";\nimport { getUserByJwt } from \"../services/authServices\";\nimport { getJwt } from \"../services/userService\";\n\nhttp.setJwtForClub(getJwt());\nhttp.setJwt(getJwt());\n\nclass HomePage extends Component {\n  state = {\n    allData: [\n      { id: 5, name: \"All Games\" },\n      { id: 1, name: \"Football\" },\n      { id: 2, name: \"Cricket\" },\n      { id: 3, name: \"Tennis\" },\n      { id: 4, name: \"Others\" },\n    ],\n    nameOfMatchId: [],\n    currentGameName: {\n      gameName: \"All Games\",\n      itemCount: \"\",\n    },\n    data: [],\n    announcement: [],\n    currentGameData: [],\n    liveGameId: [],\n    upcommingGameId: [],\n    liveGameData: [],\n    upcommingGameData: [],\n    matchesQuestion: {},\n    matchId: null,\n    isLoading: true,\n    isLive: true,\n    user: \"\",\n  };\n  async componentDidMount() {\n    try {\n      const datapak = await http.get(\n        apiEndPoint(\"api/match/?active_only=true\")\n      );\n\n      if (datapak.data.results.length > 0) {\n        const data = datapak.data.results.sort(this.compare);\n\n        const currentGameName = { ...this.state.currentGameName };\n        const matchesQuestion = {};\n        const liveGameId = [];\n        const upcommingGameId = [];\n        const upcommingGameData = [];\n        const liveGameData = [];\n        var res = await http.get(apiEndPoint(\"api/bet_scope/\"));\n        res = res.data.results.sort(this.compare);\n        for (var item of res) {\n          if (item.match in matchesQuestion) {\n            matchesQuestion[item.match].push(item);\n          } else {\n            matchesQuestion[item.match] = [];\n            matchesQuestion[item.match].push(item);\n          }\n        }\n        for (var item1 of data) {\n          if (item1.is_live === true) {\n            liveGameId.push(item1.id);\n          } else {\n            upcommingGameId.push(item1.id);\n          }\n        }\n        for (var item2 of data) {\n          if (liveGameId.includes(item2.id)) {\n            liveGameData.push(item2);\n          } else {\n            upcommingGameData.push(item2);\n          }\n        }\n\n        this.setState({\n          matchesQuestion,\n          data,\n          currentGameData: liveGameData,\n          currentGameName,\n          upcommingGameId,\n          liveGameId,\n          liveGameData,\n          upcommingGameData,\n          isLive: true,\n        });\n        const user = getUserByJwt();\n        this.setState({\n          isLoading: false,\n          user,\n        });\n      }\n    } catch (err) {}\n    const announcement = await http.get(apiEndPoint(\"api/announcement/\"));\n    this.setState({\n      announcement: announcement.data.results,\n      isLoading: false,\n    });\n  }\n  compare = (a, b) => {\n    if (a.id < b.id) {\n      return -1;\n    }\n    if (a.id > b.id) {\n      return 1;\n    }\n    return 0;\n  };\n  handleFilter = (name) => {\n    const newData = [...this.state.data];\n    const liveGameId = [...this.state.liveGameId];\n    const upcommingGameId = [...this.state.upcommingGameId];\n    const liveGameItems = [];\n    const upcommingGameItems = [];\n    for (var item of newData) {\n      if (item.game_name.toLowerCase() === name.toLowerCase()) {\n        if (liveGameId.includes(item.id)) {\n          liveGameItems.push(item);\n        } else if (upcommingGameId.includes(item.id)) {\n          upcommingGameItems.push(item);\n        }\n      }\n      if (name.toLowerCase() === \"All Games\".toLowerCase()) {\n        if (liveGameId.includes(item.id)) {\n          liveGameItems.push(item);\n        } else if (upcommingGameId.includes(item.id)) {\n          upcommingGameItems.push(item);\n        }\n      }\n    }\n    const currentGameName = { ...this.state.currentGameName };\n\n    currentGameName.itemCount = liveGameItems.length;\n    currentGameName.gameName = name;\n    this.setState({\n      currentGameData: liveGameItems,\n      currentGameName,\n      liveGameData: liveGameItems,\n      upcommingGameData: upcommingGameItems,\n      isLive: true,\n    });\n  };\n\n  filteredForLive = (name) => {\n    if (name.toLowerCase() === \"upcomming\") {\n      this.setState({\n        isLive: false,\n        currentGameData: this.state.upcommingGameData || {},\n      });\n    } else {\n      this.setState({\n        isLive: true,\n        currentGameData: this.state.liveGameData || {},\n      });\n    }\n  };\n\n  render() {\n    const { isLoading, isLive, user } = this.state;\n\n    return (\n      <>\n        {user && !user.admin && (\n          <div\n            className=\"liveBox2 container mb-2\"\n            style={{ backgroud: \"white\" }}\n          >\n            <span\n              className=\"LiveBtn2\"\n              data-toggle=\"modal\"\n              data-target=\"#WithDeaw\"\n            >\n              WithDraw\n            </span>\n            <span\n              className=\"LiveBtn2 \"\n              data-toggle=\"modal\"\n              data-target=\"#Deposit\"\n            >\n              Deposit\n            </span>\n          </div>\n        )}\n        {isLoading && <Loader />}\n        {!isLoading && (\n          <section className=\"section section-sm \">\n            <div className=\"container\">\n              <div className=\"gamesSliderBox\">\n                <Swiper\n                  breakpoints={{\n                    320: {\n                      slidesPerView: 3,\n                      spaceBetween: 0,\n                    },\n\n                    480: {\n                      slidesPerView: 4,\n                      spaceBetween: 0,\n                    },\n\n                    640: {\n                      slidesPerView: 5,\n                      spaceBetween: 0,\n                    },\n                  }}\n                >\n                  {this.state.allData.map(({ name, id }) => {\n                    return (\n                      <SwiperSlide key={id} className=\"sprite  icon\">\n                        <span\n                          className={\n                            this.state.currentGameName.gameName.toLowerCase() ===\n                            name.toLocaleLowerCase()\n                              ? \"sprite active icon\"\n                              : \" sprite  icon\"\n                          }\n                          onClick={() => this.handleFilter(name.toLowerCase())}\n                        >\n                          {name !== \"Cricket\" && (\n                            <span\n                              className={\"sprite icofont-\" + name.toLowerCase()}\n                            />\n                          )}\n                          {(name === \"Others\" || name === \"All Games\") && (\n                            <span className=\"sprite icofont-bird-wings \" />\n                          )}\n                          {name === \"Cricket\" && (\n                            <span className=\"sprite icofont-helmet\" />\n                          )}\n                          <span className=\"isotope-filters-list-text\">\n                            {name}\n                          </span>\n                        </span>\n                      </SwiperSlide>\n                    );\n                  })}\n                </Swiper>\n              </div>\n              <div className=\"liveBox2\">\n                <span\n                  className={\n                    !isLive\n                      ? \"col-lg-6 col-md-6 col-sm-6 LiveBtn\"\n                      : \"col-lg-6 col-md-6 col-sm-6 LiveBtn actived\"\n                  }\n                  onClick={() => this.filteredForLive(\"live\")}\n                >\n                  Live Match\n                </span>\n                <span\n                  className={\n                    isLive\n                      ? \"col-lg-6 col-md-6 col-sm-6 LiveBtn\"\n                      : \"col-lg-6 col-md-6 col-sm-6 LiveBtn actived\"\n                  }\n                  onClick={() => this.filteredForLive(\"upcomming\")}\n                >\n                  Upcoming Match\n                </span>\n              </div>\n              <span className=\"announceBox \">\n                <span className=\"marquee\">\n                  {this.state.announcement &&\n                    this.state.announcement.map(({ id, text, expired }) => {\n                      return <p>{!expired && <span key={id}>{text}</span>}</p>;\n                    })}\n                </span>\n              </span>\n              <div className=\"accordion\" id=\"accordion\">\n                {this.state.currentGameData &&\n                  this.state.currentGameData.map(\n                    ({ game_name, title, start_time, id, hide }) => {\n                      return (\n                        <>\n                          {!hide && (\n                            <div\n                              className=\"accordion\"\n                              key={id.toString() + \"*\" + game_name}\n                            >\n                              <div\n                                className=\"sport-table-header\"\n                                id=\"headingOne\"\n                              >\n                                <span className=\"mb-0\">\n                                  <span\n                                    data-toggle=\"collapse\"\n                                    data-target={\n                                      \"#collapseOne\" + id.toString() + game_name\n                                    }\n                                    aria-expanded=\"true\"\n                                    aria-controls=\"collapseOne\"\n                                  >\n                                    <div className=\"row\">\n                                      <div className=\"col-xl-1 col-lg-1 col-md-1 col-sm-2 col-xs-2\">\n                                        <div className=\"sport-table-icon\">\n                                          <span\n                                            className={\n                                              \"sprite icofont-bird-wings\"\n                                            }\n                                          />\n                                        </div>\n                                      </div>\n                                      <div className=\"col-xl-11 col-lg-11 col-md-11 col-sm-10 col-xs-10\">\n                                        <span\n                                          style={{\n                                            color: \"\",\n                                            fontWeight: \"bold\",\n                                            display: \"inline-block\",\n                                          }}\n                                        >\n                                          <span style={{ color: \"red\" }}>\n                                            {game_name}\n                                          </span>{\" \"}\n                                          : {title}\n                                        </span>\n\n                                        <br />\n                                        <span style={{ color: \"#999\" }}>\n                                          {start_time.split(\"T\")[0]}{\" \"}\n                                          {start_time\n                                            .split(\"T\")[1]\n                                            .split(\"+\")[0]\n                                            .substring(0, 5)}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </span>\n                                </span>\n                              </div>\n                              <div\n                                id={\"collapseOne\" + id.toString() + game_name}\n                                className=\"collapse show\"\n                                aria-labelledby=\"headingOne\"\n                                data-parent=\"#accordion\"\n                              >\n                                <div className=\"panel-body\">\n                                  <div className=\"accordion\" id=\"accordion2\">\n                                    {this.state.matchesQuestion[id] &&\n                                      this.state.matchesQuestion[id].map(\n                                        ({\n                                          question,\n                                          option_1,\n                                          option_2,\n                                          ...restProps\n                                        }) => {\n                                          return (\n                                            <InPlayHelper\n                                              key={\n                                                id.toString() +\n                                                question +\n                                                option_1 +\n                                                option_1 +\n                                                option_2\n                                              }\n                                              {...restProps}\n                                              option_1={option_1}\n                                              option_2={option_2}\n                                              question={question}\n                                              is_live={this.state.isLive}\n                                            />\n                                          );\n                                        }\n                                      )}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          )}\n                          {!start_time && (\n                            <div>\n                              <h1>No data found</h1>\n                            </div>\n                          )}\n                        </>\n                      );\n                    }\n                  )}\n              </div>\n            </div>\n          </section>\n        )}\n        <Deposite />\n        <WithDeaw />\n      </>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, { Component } from \"react\";\nimport \"./navBar.css\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getCurrentUser,\n  getUserByJwt,\n  getCurrentClub,\n} from \"../services/authServices\";\n\nclass Navbar extends Component {\n  state = {\n    user: {\n      username: \"\",\n      balance: \"\",\n      id: \"\",\n      name: \"\",\n      game_editor: false,\n      admin: false,\n    },\n    currentUserData: {\n      balance: \"\",\n      username: \"\",\n      id: \"\",\n      name: \"\",\n      game_editor: false,\n      admin: false,\n    },\n  };\n  async componentDidMount() {\n    try {\n      const data = getUserByJwt();\n\n      if (data) {\n        this.setState({\n          user: data,\n          currentUserData: data,\n        });\n      }\n      try {\n        const res = await getCurrentClub();\n        this.setState({ currentUserData: res.data });\n      } catch (err) {\n        const res = await getCurrentUser();\n        this.setState({ currentUserData: res.data });\n      }\n    } catch (e) {}\n  }\n\n  render() {\n    const { username, name } = this.state.user;\n    const { balance } = this.state.currentUserData;\n\n    return (\n      <>\n        <nav className=\"myNavbar red\">\n          <ul\n            className=\"inLine\"\n            style={{ width: \"100%\", background: \"#000000\", height: \"60px\" }}\n          >\n            <li>\n              <Link\n                to=\"./\"\n                className=\"icofont-elk\"\n                style={{ fontSize: \"40px\" }}\n              >\n                win24\n              </Link>\n            </li>\n            {!name && !username && (\n              <>\n                <li style={{ float: \"right\" }}>\n                  <div\n                    className=\"white\"\n                    data-toggle=\"modal\"\n                    data-target=\"#Login\"\n                  >\n                    Login\n                  </div>\n                </li>\n                <li style={{ float: \"right\" }}>\n                  <div\n                    className=\"white\"\n                    data-toggle=\"modal\"\n                    data-target=\"#Register\"\n                  >\n                    Register\n                  </div>\n                </li>\n              </>\n            )}\n            {(name && (\n              <>\n                <li style={{ float: \"right\", fontSize: \"15px\" }}>\n                  <Link className=\"white\" to=\"/clubprofile\">\n                    {username}\n                    {name}\n                    <span className=\"icofont-taka\">\n                      {balance && balance.toFixed(2)}\n                    </span>\n                  </Link>\n                </li>\n              </>\n            ))}\n            {(username) && (\n              <>\n                <li style={{ float: \"right\", fontSize: \"15px\" }}>\n                  <Link className=\"white\" to=\"/profile\">\n                    {username}\n                    {name}\n                    <span className=\"icofont-taka\">\n                      {balance && balance.toFixed(2)}\n                    </span>\n                  </Link>\n                </li>\n              </>\n            )}\n          </ul>\n        </nav>\n      </>\n    );\n  }\n}\n\nexport default Navbar;\n","import { Component } from \"react\";\nimport Joi from \"joi-browser\";\nclass LoginRegister extends Component {\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data, errors });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n    this.doSubmit();\n  };\n}\n\nexport default LoginRegister;\n","import React from \"react\";\nimport { Input } from \"./inputHelp\";\nimport LoginRegister from \"./loginRegister\";\nimport Joi from \"joi-browser\";\nimport { login, loginClub } from \"../services/userService\";\nimport { toast } from \"react-toastify\";\n\nclass Login extends LoginRegister {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\",\n    },\n    isClub: false,\n    errors: {\n      username: null,\n      password: null,\n    },\n  };\n\n  schema = {\n    username: Joi.string().min(3).max(8).required().label(\"User Name\"),\n    password: Joi.string().min(6).max(30).required().label(\"password\"),\n  };\n\n  doSubmit = async (e) => {\n    try {\n      if (this.state.isClub) {\n        const data = await loginClub(this.state.data);\n        toast.success(\"Log in Successfull !\");\n        localStorage.setItem(\"token\", data.data.jwt);\n        this.setState({ data: {} });\n        window.location = \"/\";\n      } else {\n        const data = await login(this.state.data);\n        toast.success(\"Log in Successfull !\");\n        localStorage.setItem(\"token\", data.data.jwt);\n        this.setState({ data: {} });\n        window.location = \"/\";\n      }\n    } catch (err) {\n      if (err.response && err.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = err.response.data.detail;\n        this.setState({ errors });\n  \n      }\n    }\n  };\n\n  render() {\n    const { username, password } = this.state.data;\n    const { errors } = this.state;\n\n    return (\n      <div className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" id=\"Login\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\" style={{ background: \"green\" }}>\n              <h5 className=\"modal-title\">Login form</h5>\n              <button\n                type=\"button\"\n                className=\"close \"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span className=\"icofont-ui-close btn-my\"></span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              <form\n                className=\"rd-form rd-mailform\"\n                onSubmit={this.handleSubmit}\n              >\n                <Input\n                  placeholder=\"Username\"\n                  name=\"username\"\n                  value={username}\n                  onChange={this.handleChange}\n                  errors={errors.username}\n                />\n                <Input\n                  placeholder=\"Password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={this.handleChange}\n                  type=\"password\"\n                  errors={errors.password}\n                />\n                <div className=\"form-check\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    id=\"exampleCheck1\"\n                    value={this.state.isClub}\n                    onClick={() =>\n                      this.setState({ isClub: !this.state.isClub })\n                    }\n                  />\n                  <label className=\"form-check-label\" htmlFor=\"exampleCheck1\">\n                    Is Club ?\n                  </label>\n                </div>\n                <button\n                  className=\"button button-lg button-primary button-block mt-4\"\n                  type=\"submit\"\n                >\n                  Login\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport LoginRegister from \"./loginRegister\";\nimport { Input } from \"./inputHelp\";\nimport { register } from \"../services/userService\";\nimport axios from \"axios\";\nimport Joi from \"joi-browser\";\nimport { toast } from \"react-toastify\";\nimport { apiEndPoint } from \"../endPoins\";\nclass Register extends LoginRegister {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\",\n      phoneNumber: \"\",\n      fullName: \"\",\n      clubName: \"\",\n      sponserName: \"\",\n      reTypepassword: \"\",\n      email: \"\",\n    },\n    errors: {\n      username: \"\",\n      password: \"\",\n      phoneNumber: \"\",\n      fullName: \"\",\n      clubName: \"\",\n      sponserName: \"\",\n      reTypepassword: \"\",\n      email: \"\",\n    },\n    allClube: [{ name: \"\", id: \"\" }],\n  };\n\n  schema = {\n    fullName: Joi.string().min(6).max(14).required().label(\"Full Name\"),\n    username: Joi.string()\n      .alphanum()\n      .min(3)\n      .max(8)\n      .required()\n      .label(\"User Name\"),\n    email: Joi.string().required().email().label(\"Email\"),\n    password: Joi.string().alphanum().min(6).required().label(\"password\"),\n    phoneNumber: Joi.string().min(11).max(11).required().label(\"Phone Number\"),\n    clubName: Joi.string().label(\"Club Name\"),\n    reTypepassword: Joi.string().label(\"password\"),\n    sponserName: Joi.string().min(0).max(8).label(\"Sponser Name\").allow(\"\"),\n  };\n  compare = (a, b) => {\n    if (a.id < b.id) {\n      return -1;\n    }\n    if (a.id > b.id) {\n      return 1;\n    }\n    return 0;\n  };\n  async componentDidMount() {\n    const promise = await axios.get(apiEndPoint(\"api/club/\"));\n    var data = promise.data.results;\n    data = data.sort(this.compare);\n    this.setState({ allClube: data });\n  }\n\n  doSubmit = async (e) => {\n    try {\n      if (this.state.data.password !== this.state.data.reTypepassword) {\n      \n        const errors = { ...this.state.errors };\n        errors.reTypepassword = \"password does not match !\";\n        this.setState({ errors });\n        return;\n      }\n      const data = await register(this.state.data);\n      localStorage.setItem(\"token\", data.data.jwt);\n      this.setState({ data: {} });\n      window.location = \"/\";\n    } catch (err) {\n  \n      if (err.response && err.response.status === 400) {\n        toast.error(err.response.data);\n        const errors = { ...this.state.errors };\n        try {\n          errors.username = err.response.data.username[0];\n        } catch (ex) {}\n        try {\n          errors.email = err.response.data.email[0];\n        } catch (ex) {}\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    const {\n      username,\n      password,\n      phoneNumber,\n      fullName,\n      sponserName,\n      reTypepassword,\n      email,\n    } = this.state.data;\n    const { errors } = this.state;\n    return (\n      <>\n        <div className=\"modal fade\" id=\"Register\" tabIndex=\"-1\" role=\"dialog\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\" style={{ background: \"green\" }}>\n                <h5 className=\"modal-title\">Register form</h5>\n                <button type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span className=\"icofont-ui-close btn-my\"></span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form\n                  className=\"rd-form rd-mailform\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <Input\n                    placeholder=\"Enter Full Name\"\n                    name=\"fullName\"\n                    value={fullName}\n                    onChange={this.handleChange}\n                    errors={errors.fullName}\n                  />\n                  <Input\n                    placeholder=\"Enter Phone Number\"\n                    name=\"phoneNumber\"\n                    value={phoneNumber}\n                    type=\"number\"\n                    onChange={this.handleChange}\n                    errors={errors.phoneNumber}\n                  />\n                  <Input\n                    placeholder=\"Enter username\"\n                    name=\"username\"\n                    value={username}\n                    onChange={this.handleChange}\n                    errors={errors.username}\n                  />\n                  <Input\n                    placeholder=\"Enter Email\"\n                    name=\"email\"\n                    value={email}\n                    onChange={this.handleChange}\n                    errors={errors.email}\n                  />\n                  <Input\n                    placeholder=\"Enter password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={this.handleChange}\n                    type=\"password\"\n                    errors={errors.password}\n                  />\n                  <Input\n                    placeholder=\"Retype password\"\n                    name=\"reTypepassword\"\n                    value={reTypepassword}\n                    onChange={this.handleChange}\n                    errors={errors.reTypepassword}\n                  />{\" \"}\n                  <Input\n                    placeholder=\"Enter Sponser Name\"\n                    name=\"sponserName\"\n                    value={sponserName}\n                    onChange={this.handleChange}\n                    errors={errors.sponserName}\n                  />\n                  <div className=\"form-input form-group mb-4\">\n                    <label htmlFor=\"exampleFormControlSelect1\">\n                      Select Club\n                    </label>\n\n                    <select\n                      name=\"clubName\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={this.state.data.clubName}\n                    >\n                      <option key=\"n/a\">Select Club</option>\n                      {this.state.allClube.map(({ id, name }) => {\n                        return (\n                          <option value={id} key={id}>\n                            {name}\n                          </option>\n                        );\n                      })}\n                    </select>\n                    <small className=\"text-warning\">{errors.clubName}</small>\n                  </div>\n                  <button\n                    className=\"button button-lg button-primary button-block\"\n                    type=\"submit\"\n                  >\n                    Singup\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport { apiEndPoint } from \"../endPoins\";\nimport { getJwt } from \"../services/authServices\";\nimport http from \"../services/httpServices\";\n\nhttp.setJwtForClub(getJwt());\nhttp.setJwt(getJwt());\n\nclass Notification extends Component {\n  state = { data: [] };\n  async componentDidMount() {\n    try {\n      const res = await http.get(apiEndPoint(\"api/notification/\"));\n      const data = res.data.results;\n      data.map((data, index) => {\n        data.serial = index + 1;\n        return null;\n      });\n      this.setState({ data });\n    } catch (err) {}\n  }\n\n  render() {\n    const { data } = this.state;\n    return (\n      <div className=\"modal\" tabIndex=\"-1\" role=\"dialog\" id=\"Notifications\">\n        <div className=\"modal-dialog\" role=\"document\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              <h5 className=\"modal-title \">Notifications</h5>\n              <button\n                type=\"button\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <span className=\"icofont-ui-close btn-my\"></span>{\" \"}\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              {data.length > 0 && (\n                <div>\n                  <table className=\"table table-light\" width=\"100vw\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">#</th>\n                        <th scope=\"col\">Description</th>\n                        <th scope=\"col\">Send At</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {data\n                        .slice(0, 10)\n                        .map(({ serial, message, created_at }, index) => {\n                          return (\n                            <tr key={index}>\n                              <th scope=\"row\">{serial}</th>\n                              <td>{message}</td>\n                              <td>{created_at.split(\"T\")[0]}</td>\n                            </tr>\n                          );\n                        })}\n                    </tbody>\n                  </table>\n                </div>\n              )}\n              {data.length === 0 && (\n                <h5 className=\"text-primary text-center h5\">No Notification</h5>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport { apiEndPoint } from \"../endPoins\";\nimport { getUserByJwt } from \"../services/authServices\";\nimport { Input } from \"../login/inputHelp\";\n\nimport { getJwt } from \"../services/userService\";\nimport Loader2 from \"../loader copy\";\nimport Notification from \"../notification/notification\";\nimport http from \"../services/httpServices\";\nhttp.setJwtForClub(getJwt());\nhttp.setJwt(getJwt());\n\nclass OriginalProfile extends Component {\n  state = {\n    userDetails: {\n      id: 1,\n      referred_by: {\n        username: \"\",\n        first_name: \"\",\n        last_name: \"\",\n      },\n      is_club_admin: true,\n      refer_set: [],\n      last_login: \"\",\n      is_superuser: true,\n      username: \"miloy\",\n      first_name: \"S.M\",\n      last_name: \"Miloy\",\n      is_staff: true,\n      is_active: true,\n      date_joined: \"\",\n      balance: 45.0,\n      email: \"\",\n      phone: \"\",\n      game_editor: true,\n      user_club: {\n        id: 1,\n        name: \"\",\n        balance: 0.0,\n        admin: 1,\n      },\n    },\n    updateUserDetails: {\n      phone: \"\",\n      first_name: \"\",\n      user_club: \"\",\n      password: \"\",\n    },\n    allClube: [{ name: \"\", id: \"\" }],\n    isLoading: true,\n  };\n  async componentDidMount() {\n    try {\n      const userDetails = getUserByJwt();\n      this.setState({ userDetails });\n    } catch (err) {}\n    const promise = await http.get(apiEndPoint(\"api/club/\"));\n    const dataOfUser = await http.get(apiEndPoint(\"api/user-detail-update/\"));\n\n    this.setState({\n      allClube: promise.data.results,\n    });\n    if (dataOfUser.data) {\n      this.setState({\n        userDetails: dataOfUser.data || {},\n      });\n    }\n    this.setState({\n      isLoading: false,\n    });\n  }\n  handleChange = ({ currentTarget: input }) => {\n    const updateUserDetails = { ...this.state.updateUserDetails };\n    updateUserDetails[input.name] = input.value;\n    this.setState({ updateUserDetails });\n  };\n  onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n    \n      await http.patch(\n        apiEndPoint(\"api/user-detail-update/\"),\n        this.state.updateUserDetails\n      );\n\n      window.location = \"/profile\";\n    } catch (err) {\n    \n    }\n  };\n  render() {\n    if (this.state.userDetails.admin) {\n      return null;\n    } else {\n      const {\n        username,\n        balance,\n        email,\n        phone,\n        first_name,\n        referred_by,\n        date_joined,\n        earn_from_refer,\n        club_detail,\n      } = this.state.userDetails;\n\n      const { updateUserDetails } = this.state;\n      const { isLoading } = this.state;\n\n      return (\n        <>\n          {isLoading && <Loader2 />}\n          {!isLoading && (\n            <>\n              <div className=\"card user-card-full\">\n                <div className=\"row m-l-0 m-r-0\">\n                  <div className=\"col-sm-4 bg-c-lite-green user-profile\">\n                    <div className=\"card-block text-center text-white\">\n                      <div className=\"m-b-25\">\n                        {\" \"}\n                        <img\n                          src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\n                          className=\"img-radius\"\n                          alt=\"UserProfile\"\n                        />{\" \"}\n                      </div>\n                      <h6 className=\"f-w-600\">\n                        Username : <span className=\"\">{username}</span>\n                      </h6>\n                      <p>\n                        Current Blance :{\" \"}\n                        <span className=\"icofont-taka\"> {balance} </span>{\" \"}\n                      </p>\n                      <p\n                        className=\"icofont-notification\"\n                        data-toggle=\"modal\"\n                        data-target=\"#Notifications\"\n                      ></p>\n                      <i className=\" mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16\"></i>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-8\">\n                    <div className=\"card-block\">\n                      <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600\">\n                        Information\n                      </h6>\n                      <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">\n                            {\" \"}\n                            <span className=\"icofont-user\" /> Name\n                          </p>\n                          <h6 className=\"text-muted f-w-400\">{first_name}</h6>\n                        </div>\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">\n                            {\" \"}\n                            <span className=\"icofont-phone\" /> Phone\n                          </p>\n                          <h6 className=\"text-muted f-w-400\">{phone}</h6>\n                        </div>\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">\n                            {\" \"}\n                            <span className=\"icofont-email\" /> Email\n                          </p>\n                          <h6 className=\"text-muted f-w-400\">{email}</h6>\n                        </div>\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">\n                            {\" \"}\n                            <span className=\"icofont-user\" /> User Name\n                          </p>\n                          <h6 className=\"text-muted f-w-400\">{username}</h6>\n                        </div>\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">\n                            {\" \"}\n                            <span className=\"icofont-cube\" /> Refered BY\n                          </p>\n                          <h6 className=\"text-muted f-w-400 green\">\n                            {referred_by && referred_by.username}\n                            {!referred_by.username && \"Null\"}\n                          </h6>\n                        </div>\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">\n                            {\" \"}\n                            <span className=\"icofont-ui-home\" /> Clube Name\n                          </p>\n                          <h6 className=\"text-muted f-w-400 green\">\n                            {club_detail.name && club_detail.name}\n                          </h6>\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">\n                            {\" \"}\n                            <span className=\"icofont-cube\" /> Join Data\n                          </p>\n                          <h6 className=\"text-muted f-w-400 green\">\n                            {date_joined.split(\"T\")[0]}\n                          </h6>\n                        </div>\n                        <div className=\"col-sm-6\">\n                          <p className=\"m-b-10 f-w-600\">\n                            {\" \"}\n                            <span className=\"icofont-cube\" /> Earn from referred\n                          </p>\n                          <h6 className=\"text-muted f-w-400 green\">\n                            {earn_from_refer}\n                          </h6>\n                        </div>\n                      </div>\n                    </div>\n                    <button\n                      data-toggle=\"modal\"\n                      data-target=\"#ChangeInformation\"\n                      className=\"button button-lg button-primary button-block \"\n                    >\n                      Change Information\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"modal fade\"\n                id=\"ChangeInformation\"\n                tabIndex=\"-1\"\n                role=\"dialog\"\n              >\n                <div className=\"modal-dialog\" role=\"document\">\n                  <div className=\"modal-content\">\n                    <div\n                      className=\"modal-header\"\n                      style={{ background: \"green\" }}\n                    >\n                      <h5 className=\"modal-title\">Change Information</h5>\n                      <button\n                        type=\"button\"\n                        data-dismiss=\"modal\"\n                        aria-label=\"Close\"\n                      >\n                        <span className=\"icofont-ui-close btn-my\"></span>{\" \"}\n                      </button>\n                    </div>\n                    <div className=\"modal-body\">\n                      <form\n                        className=\"rd-form rd-mailform\"\n                        onSubmit={this.onSubmit}\n                      >\n                        <Input\n                          placeholder=\"Enter new Full Name\"\n                          name=\"first_name\"\n                          value={updateUserDetails.first_name}\n                          onChange={this.handleChange}\n                        />\n                        <Input\n                          placeholder=\"Enter new phone number\"\n                          name=\"phone\"\n                          value={updateUserDetails.phone}\n                          onChange={this.handleChange}\n                        />\n                        <div className=\"form-input form-group mb-4\">\n                          <label htmlFor=\"exampleFormControlSelect1\">\n                            Change Club\n                          </label>\n                          <select\n                            name=\"user_club\"\n                            onChange={this.handleChange}\n                            className=\"form-control\"\n                            value={updateUserDetails.user_club}\n                          >\n                            <option key=\"n/a\">Select Club</option>\n                            {this.state.allClube.map(({ id, name }) => {\n                              return (\n                                <option value={id} key={id}>\n                                  {name}\n                                </option>\n                              );\n                            })}\n                          </select>\n                        </div>\n                        {/* <Input\n                          placeholder=\"Enter new Password\"\n                          name=\"password\"\n                          value={updateUserDetails.password}\n                          onChange={this.handleChange}\n                          type=\"password\"\n                        /> */}\n                        <button\n                          className=\"button button-lg button-primary button-block\"\n                          type=\"submit\"\n                        >\n                          Update\n                        </button>\n                      </form>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n          <Notification />\n        </>\n      );\n    }\n  }\n}\n\nexport default OriginalProfile;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\nclass NavBarProfile extends Component {\n  render() {\n    return (\n      <div className=\"gamesSliderBox mt-4\">\n        <Swiper\n          breakpoints={{\n            // when window width is <= 320px\n            320: {\n              slidesPerView: 4,\n              spaceBetween: 0,\n            },\n            // when window width is <= 480px\n            480: {\n              slidesPerView: 4,\n              spaceBetween: 0,\n            },\n\n            // when window width is <= 640px\n            640: {\n              slidesPerView: 4,\n              spaceBetween: 0,\n            },\n          }}\n        >\n          <SwiperSlide>\n            <Link\n              to=\"/profile\"\n              data-toggle=\"modal\"\n              data-target=\"#Deposite\"\n              className=\" sprite isotopeIconBox green none\"\n            >\n              <span\n                className=\"sprite icofont-taka-minus\n\"\n              />\n              <p>Profile</p>\n            </Link>\n          </SwiperSlide>\n\n          <SwiperSlide>\n            <span\n              data-toggle=\"modal\"\n              data-target=\"#Deposit\"\n              className=\" sprite isotopeIconBox green none\"\n            >\n              <span\n                className=\"sprite icofont-taka-minus\"\n              />\n              <p>Deposit</p>\n            </span>\n          </SwiperSlide>\n          <SwiperSlide>\n            <span\n              data-toggle=\"modal\"\n              data-target=\"#WithDeaw\"\n              className=\" sprite isotopeIconBox green none\"\n            >\n              <span\n                className=\"sprite icofont-taka-minus\"\n              />\n              <p>Withdraw</p>\n            </span>\n          </SwiperSlide>\n          <SwiperSlide>\n            <span\n              data-toggle=\"modal\"\n              data-target=\"#Transfer\"\n              className=\" sprite isotopeIconBox none green\"\n            >\n              <span className=\"sprite icofont-zigzag \" />\n              <p>Transfer</p>\n            </span>\n          </SwiperSlide>\n        </Swiper>\n      </div>\n    );\n  }\n}\n\nexport default NavBarProfile;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Error404 extends Component {\n  state = {};\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-12\">\n            <div className=\"error-template\">\n              <h1>Oops!</h1>\n              <h2>404 Not Found</h2>\n              <div className=\"error-details\">\n                Sorry, an error has occured, Requested page not found!\n              </div>\n              <div className=\"error-actions\">\n                <Link to=\"/\" className=\"btn btn-primary btn-lg\">\n                  <span className=\"glyphicon glyphicon-home\"></span>\n                  Take Me Home{\" \"}\n                </Link>\n                <span className=\"btn btn-default btn-lg\">\n                  <span className=\"glyphicon glyphicon-envelope\"></span> Try Agian{\" \"}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Error404;\n","import React, { Component } from \"react\";\nimport OriginalProfile from \"./onriginalProfile\";\nimport NavBarProfile from \"./navBarProfile\";\nimport { getUserByJwt } from \"../services/authServices\";\nimport Error404 from \"../404\";\n\nclass Profile extends Component {\n  state = {\n    user: {},\n  };\n  componentDidMount() {\n    try {\n      const user = getUserByJwt();\n      this.setState({ user });\n    } catch (err) {}\n  }\n  render() {\n    const { user } = this.state;\n \n    return (\n      <>\n        {user && !user.admin && (\n          <>\n            <NavBarProfile />\n            <OriginalProfile />\n          </>\n        )}\n        {(!user || user.admin) && <Error404 />}\n      </>\n    );\n  }\n}\n\nexport default Profile;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\n\nclass NavBarStatement extends Component {\n  render() {\n    return (\n      <div className=\"gamesSliderBox mt-4\">\n        <Swiper\n          breakpoints={{\n            // when window width is <= 320px\n            320: {\n              slidesPerView: 2,\n              spaceBetween: 0,\n            },\n            // when window width is <= 480px\n            480: {\n              slidesPerView: 3,\n              spaceBetween: 0,\n            },\n\n            // when window width is <= 640px\n            640: {\n              slidesPerView: 5,\n              spaceBetween: 0,\n            },\n          }}\n        >\n          {\" \"}\n          <SwiperSlide>\n            <Link\n              to=\"/betting\"\n              className=\"miloyIconBox sprite isotopeIconBox none\"\n            >\n              <span className=\"sprite icofont-baht\" />\n              <p>Betting</p>\n            </Link>\n          </SwiperSlide>\n          <SwiperSlide>\n            <Link\n              to=\"/deposit\"\n              className=\"miloyIconBox sprite isotopeIconBox none\"\n            >\n              <span className=\"sprite icofont-baht\" />\n              <p>Deposit</p>\n            </Link>\n          </SwiperSlide>\n          <SwiperSlide>\n            <Link\n              to=\"/withDraws\"\n              className=\"miloyIconBox sprite isotopeIconBox none\"\n            >\n              <span\n                className=\"sprite icofont-taka-minus\"\n              />\n              <p>Withdeaw</p>\n            </Link>\n          </SwiperSlide>\n          <SwiperSlide>\n            <Link\n              to=\"/transfarStatement\"\n              className=\"miloyIconBox sprite isotopeIconBox none\"\n            >\n              <span className=\"sprite icofont-zigzag\" />\n              <p>Transfare money</p>\n            </Link>\n          </SwiperSlide>\n          <SwiperSlide>\n            <Link\n              to=\"/allTransactions\"\n              className=\"miloyIconBox sprite isotopeIconBox none\"\n            >\n              <span className=\"sprite icofont-coins\" />\n              <p>All Trasactions</p>\n            </Link>\n          </SwiperSlide>\n        </Swiper>\n      </div>\n    );\n  }\n}\n\nexport default NavBarStatement;\n","import React, { Component } from \"react\";\nimport NavBarStatement from '../statement/statementNavbar';\nclass Betting extends Component {\n  state = {\n    tableHead: [\n      { id: \"1\", header: \"Match\" },\n      { id: \"3\", header: \"Date\" },\n      { id: \"4\", header: \"Question\" },\n      { id: \"5\", header: \"Choiced\" },\n      { id: \"6\", header: \"Amount\" },\n      { id: \"7\", header: \"Win/loos\" },\n    ],\n    tableData: [\n      {\n        id: \"1\",\n        date:\"1/2/3\",\n        choiced: \"Bn\",\n        amount: \"12\",\n        win: \"true\",\n        match: \"BN vs IN\",\n        question: \"To win the match\",\n      }\n    ],\n  };\n  render() {\n   \n    return (\n      <div>\n        <NavBarStatement />\n        <table className=\"table table-dark table-striped \">\n          <thead>\n            <tr>\n              {this.state.tableHead.map(({ id, header }) => {\n                return (\n                  <th scope=\"col\" key={id}>\n                    {header}\n                  </th>\n                );\n              })}\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.tableData.map(\n              ({ question, choiced, amount, win, match ,date}) => {\n                return (\n                  <tr>\n                    <td>{match}</td>\n                    <td>{date}</td>\n                    <td>{question}</td>\n                    <td>{choiced}</td>\n                    <td>{amount}</td>\n                    <td className=\"green\">{win}</td>\n                  </tr>\n                );\n              }\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Betting;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({\n  itemsCount,\n  pageSize,\n  currentPage,\n  onPageChange,\n  onPageChange2,\n}) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n\n  return (\n    <nav style={{ zIndex: \"1\" }}>\n      <ul className=\"pagination pt-4 pb-4 m-0\">\n        <li className=\"page-item\">\n          <button\n            className=\"page-link\"\n            aria-label=\"Previous\"\n            onClick={() => onPageChange2(-1)}\n            disabled={1 >= currentPage}\n          >\n            <span aria-hidden=\"true\">&laquo;</span>\n          </button>\n        </li>\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n            style={{ zIndex: \"1\" }}\n          >\n            <span className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </span>\n          </li>\n        ))}\n        <li className=\"page-item\">\n          <button\n            className=\"page-link\"\n            aria-label=\"Next\"\n            onClick={() => onPageChange2(1)}\n            disabled={pagesCount <= currentPage}\n          >\n            <span aria-hidden=\"true\">&raquo;</span>\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}","import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { apiEndPoint } from \"../endPoins\";\nimport { getJwt } from \"../services/userService\";\nimport { getUserByJwt } from \"../services/authServices\";\nimport Pagination from \"./paginatin\";\nimport { paginate } from \"./paginationHelper\";\nimport Loader2 from \"../loader copy\";\nimport Error404 from \"../404\";\nimport LiveDot from \"../homePage/liveDot\";\nimport http from \"../services/httpServices\";\n\nhttp.setJwtForClub(getJwt());\nhttp.setJwt(getJwt());\n\nclass AllTransactions extends Component {\n  state = {\n    currentMethodName: {\n      methodName: \"All Transaction\",\n      itemCount: \"\",\n    },\n    currentMethodData: [],\n    data: [],\n    allData: [\n      { id: 6, name: \"Bet\" },\n      { id: 1, name: \"Withdraw\" },\n      { id: 2, name: \"Deposit\" },\n      { id: 3, name: \"transfer\" },\n      { id: 5, name: \"All Transactions\" },\n    ],\n    betData: [],\n    currentPage: 1,\n    pageSize: 10,\n    itemsCount: 0,\n    currentShowData: [],\n    isLoading: true,\n    user: null,\n  };\n  handlePageChange = (page) => {\n    const { currentMethodData, pageSize } = this.state;\n    const currentShowData = paginate(currentMethodData, page, pageSize);\n    this.setState({ currentPage: page, currentShowData });\n  };\n  handlePageChange2 = (value) => {\n    var { currentMethodData, pageSize, currentPage } = this.state;\n    currentPage += value;\n\n    const currentShowData = paginate(currentMethodData, currentPage, pageSize);\n    this.setState({ currentPage, currentShowData });\n  };\n  async componentDidMount() {\n    try {\n      const user = getUserByJwt();\n      var data = await http.get(apiEndPoint(\"api/all_transactions/\"));\n      var data1 = await http.get(apiEndPoint(\"api/bet/\"));\n      data = data.data.results.sort(this.compare);\n      data1 = data1.data.results.sort(this.compare);\n\n      this.setState({\n        betData: data1,\n        tableData: data1,\n        data: data,\n        currentMethodData: data1,\n        itemsCount: data.length,\n        user,\n      });\n      this.handleFilter(\"bet\");\n    } catch (e) {}\n    this.setState({ isLoading: false });\n  }\n  compare = (a, b) => {\n    if (a.created_at > b.created_at) {\n      return -1;\n    }\n    if (a.id > b.id) {\n      return 1;\n    }\n    return 0;\n  };\n  handelDelete = async (id) => {\n    try {\n      const currentMethodData = [...this.state.currentMethodData];\n      const amiPagol = [];\n      for (var item of currentMethodData) {\n        if (item.id !== id) {\n          amiPagol.push(item);\n        }\n      }\n\n      await http.delete(apiEndPoint(\"api/withdraw/\" + id + \"/\"));\n      this.setState({ currentShowData: amiPagol });\n      toast.success(\"Your deposit request has been canceled !\");\n    } catch (err) {\n      toast.error(\"Some thing went wrong !\");\n    }\n  };\n  handleFilter = (name) => {\n    const newData = [...this.state.data];\n    // if (newData.length === 0 || !name ) {\n    //   const currentMethodName = { ...this.state.currentMethodName };\n    //   currentMethodName.methodName = name;\n    //   this.setState({\n    //     currentMethodData: [],\n    //     currentMethodName,\n    //     currentShowData: [],\n    //   });\n    //   return;\n    // }\n    var filtered = [];\n\n    for (var item of newData) {\n      if (item.type.toLowerCase() === name.toLowerCase()) {\n        filtered.push(item);\n      }\n    }\n    if (name.toLowerCase() === \"All Transactions\".toLocaleLowerCase()) {\n      for (var item2 of this.state.betData) {\n        filtered.push(item2);\n      }\n    }\n    if (name.toLowerCase() === \"bet\") {\n      filtered = this.state.betData;\n    }\n    filtered.map((e, index) => {\n      e.serial = index + 1;\n      return null;\n    });\n\n    const currentMethodName = { ...this.state.currentMethodName };\n    currentMethodName.itemCount = filtered.length;\n    currentMethodName.methodName = name;\n\n    this.setState({\n      currentMethodData: filtered,\n      currentMethodName,\n      currentShowData: filtered.slice(0, this.state.pageSize),\n    });\n  };\n\n  render() {\n    const {\n      pageSize,\n      currentPage,\n      currentMethodData,\n      currentShowData,\n      isLoading,\n      user,\n    } = this.state;\n\n    return (\n      <>\n        {isLoading && <Loader2 />}\n        {!user && !isLoading && <Error404 />}\n        {user && (\n          <div>\n            <div className=\"gamesSliderBox m-0\">\n              <Swiper\n                breakpoints={{\n                  320: {\n                    slidesPerView: 3,\n                    spaceBetween: 0,\n                  },\n\n                  480: {\n                    slidesPerView: 3,\n                    spaceBetween: 0,\n                  },\n\n                  640: {\n                    slidesPerView: 5,\n                    spaceBetween: 0,\n                  },\n                }}\n              >\n                {\" \"}\n                {this.state.allData.map(({ name, id }) => {\n                  return (\n                    <SwiperSlide key={id} className=\"sprite icon\">\n                      <span\n                        onClick={() => this.handleFilter(name.toLowerCase())}\n                        className={\n                          this.state.currentMethodName.methodName.toLowerCase() ===\n                          name.toLocaleLowerCase()\n                            ? \"sprite active icon\"\n                            : \" sprite icon\"\n                        }\n                      >\n                        {name.toLowerCase() ===\n                          \"All Transactions\".toLowerCase() && (\n                          <span className=\"sprite icofont-coins\" />\n                        )}\n                        {name.toLowerCase() === \"Bet\".toLowerCase() && (\n                          <span className=\"sprite icofont-bitcoin\" />\n                        )}\n                        {name.toLowerCase() === \"Withdraw\".toLowerCase() && (\n                          <span className=\"sprite icofont-taka-minus\" />\n                        )}\n                        {name.toLowerCase() === \"deposit\".toLowerCase() && (\n                          <span className=\"sprite icofont-taka-plus\" />\n                        )}\n                        {name.toLowerCase() === \"transfer\".toLowerCase() && (\n                          <span className=\"sprite icofont-zigzag\" />\n                        )}\n\n                        <p>{name.toUpperCase()}</p>\n                      </span>\n                    </SwiperSlide>\n                  );\n                })}\n              </Swiper>\n            </div>\n            {!isLoading && (\n              <>\n                {this.state.currentMethodName.methodName.toLowerCase() ===\n                  \"Deposit\".toLowerCase() && (\n                  <>\n                    <div>\n                      <table\n                        style={{\n                          overflowX: \"scroll\",\n                          margin: \"0px\",\n                        }}\n                        className=\"table  table-dark table-striped table-bordered\"\n                      >\n                        <thead>\n                          <tr>\n                            <td>Serial</td>\n                            <td>To</td>\n                            <td>From</td>\n                            <td>Amount</td>\n                            <td>TrxID</td>\n                            <td>Trought</td>\n                            <td>Requested At</td>\n                            <td>Status</td>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {currentShowData.map(\n                            ({\n                              account,\n                              amount,\n                              method,\n                              status,\n                              superuser_account,\n                              transaction_id,\n                              type,\n                              created_at,\n                              id,\n                              serial,\n                            }) => {\n                              return (\n                                <tr key={id.toString() + type}>\n                                  <td>{serial}</td>\n                                  <td>{superuser_account}</td>\n                                  <td>{account}</td>\n                                  <td>{amount}</td>\n                                  <td>{transaction_id}</td>\n                                  <td>{method}</td>\n                                  <td>\n                                    {created_at.split(\"T\")[0]} <br />\n                                    {created_at.split(\"T\")[1].split(\".\")[0]}\n                                  </td>\n                                  <td>{status} </td>\n                                </tr>\n                              );\n                            }\n                          )}\n                          {!currentShowData && <span>No data fount</span>}\n                        </tbody>\n                      </table>\n                    </div>\n\n                    <Pagination\n                      onPageChange2={this.handlePageChange2}\n                      itemsCount={currentMethodData.length}\n                      pageSize={pageSize}\n                      currentPage={currentPage}\n                      onPageChange={this.handlePageChange}\n                    />\n                  </>\n                )}\n                {this.state.currentMethodName.methodName.toLowerCase() ===\n                  \"All Transactions\".toLowerCase() && (\n                  <>\n                    <div>\n                      <table\n                        style={{\n                          overflowX: \"scroll\",\n                          margin: \"0px\",\n                        }}\n                        className=\"table  m-0 table-dark table-striped table-bordered\"\n                      >\n                        <thead className=\"bg-dark\">\n                          <tr id=\"1xx1x1x1x11\">\n                            <td>Serial</td>\n                            <td>Date & Time</td>\n                            <td>Description</td>\n                            <td>Debit (Out)</td>\n                            <td>Credit (In)</td>\n                            <td>Balance</td>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {currentShowData.map(\n                            (\n                              {\n                                account,\n                                amount,\n                                method,\n                                status,\n                                superuser_account,\n                                transaction_id,\n                                type,\n                                created_at,\n                                serial,\n                                id,\n                                user_balance,\n                                match_start_time,\n                              },\n                              index\n                            ) => {\n                              return (\n                                <tr key={id.toString() + type}>\n                                  <td>{serial}</td>\n                                  <td>\n                                    {created_at && created_at.split(\"T\")[0]}\n                                    <br />\n                                    {created_at &&\n                                      created_at.split(\"T\")[1].split(\".\")[0]}\n                                  </td>\n                                  <td>\n                                    {type}\n                                    {!type && \"Bet\"}\n                                  </td>\n                                  <td>\n                                    {type !== \"deposit\" && amount}\n                                    {type === \"deposit\" && 0}\n                                    {!type && amount}\n                                  </td>\n                                  <td>\n                                    {type === \"deposit\" && amount}\n                                    {type !== \"deposit\" && 0}\n                                  </td>\n                                  <td>{user_balance}</td>\n                                </tr>\n                              );\n                            }\n                          )}\n                          {!currentShowData && <span>No data fount</span>}\n                        </tbody>\n                      </table>\n                      <Pagination\n                        onPageChange2={this.handlePageChange2}\n                        itemsCount={currentMethodData.length}\n                        pageSize={pageSize}\n                        currentPage={currentPage}\n                        onPageChange={this.handlePageChange}\n                      />\n                    </div>\n                  </>\n                )}\n                {this.state.currentMethodName.methodName.toLowerCase() ===\n                  \"withdraw\".toLowerCase() && (\n                  <div>\n                    <div\n                      style={{ overflowX: \"scroll\", scrollbarWidth: \"none\" }}\n                    >\n                      <table className=\"table m-0 table-dark table-striped table-bordered\">\n                        <thead>\n                          <tr>\n                            <td>Serial</td>\n                            <td>Date & Time</td>\n                            <td>Description</td>\n                            <td>Method</td>\n                            <td>To</td>\n                            <td>Amount</td>\n                            <td>Balance</td>\n                            <td>Status</td>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {currentShowData.length > 0 &&\n                            currentShowData.map(\n                              ({\n                                account,\n                                amount,\n                                method,\n                                status,\n                                superuser_account,\n                                transaction_id,\n                                type,\n                                created_at,\n                                id,\n                                serial,\n                                user_balance,\n                              }) => {\n                                return (\n                                  <tr key={id.toString() + type}>\n                                    <td>{serial}</td>\n                                    <td>\n                                      {created_at.split(\"T\")[0]} <br />\n                                      {created_at.split(\"T\")[1].split(\".\")[0]}\n                                    </td>\n                                    <td>{type}</td>\n                                    <td>{method} Personal</td>\n                                    <td>{account}</td>\n                                    <td>\n                                      {type !== \"deposit\" && amount}\n                                      {type === \"deposit\" && 0}\n                                    </td>\n                                    <td>{user_balance}</td>\n\n                                    <td>\n                                      {status}{\" \"}\n                                      {status === \"pending\" && (\n                                        <span\n                                          className=\"icofont-ui-close m-1 red\"\n                                          style={{\n                                            color: \"green\",\n                                            cursor: \"pointer\",\n                                          }}\n                                          onClick={() => this.handelDelete(id)}\n                                        ></span>\n                                      )}\n                                    </td>\n                                  </tr>\n                                );\n                              }\n                            )}\n                          {currentShowData.length === 0 && (\n                            <span>No data fount</span>\n                          )}\n                        </tbody>\n                      </table>\n                    </div>\n                    <Pagination\n                      onPageChange2={this.handlePageChange2}\n                      itemsCount={currentMethodData.length}\n                      pageSize={pageSize}\n                      currentPage={currentPage}\n                      onPageChange={this.handlePageChange}\n                    />\n                  </div>\n                )}\n                {this.state.currentMethodName.methodName.toLowerCase() ===\n                  \"transfer\".toLowerCase() && (\n                  <div>\n                    <div\n                      style={{ overflowX: \"scroll\", scrollbarWidth: \"none\" }}\n                    >\n                      <table className=\"table m-0 table-dark table-striped table-bordered\">\n                        <thead>\n                          <tr>\n                            <td>Serial</td>\n                            <td>Date & Time</td>\n                            <td>Description</td>\n                            <td>To</td>\n\n                            <td>Amount</td>\n                            <td>Balance</td>\n                            <td>Status</td>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {currentShowData.map(\n                            ({\n                              account,\n                              amount,\n                              method,\n                              status,\n                              superuser_account,\n                              transaction_id,\n                              type,\n                              created_at,\n\n                              id,\n                              serial,\n                              user_balance,\n                              description,\n                              to,\n                            }) => {\n                              return (\n                                <tr key={id.toString() + type}>\n                                  <td>{serial}</td>\n                                  <td>\n                                    {created_at.split(\"T\")[0]} <br />\n                                    {created_at.split(\"T\")[1].split(\".\")[0]}\n                                  </td>\n                                  <td>{description}</td>\n                                  <td>{to}</td>\n                                  <td>{amount}</td>\n                                  <td>{user_balance}</td>\n\n                                  <td>verified</td>\n                                </tr>\n                              );\n                            }\n                          )}\n                          {!currentShowData && <span>No data fount</span>}\n                        </tbody>\n                      </table>\n                    </div>\n                    <Pagination\n                      itemsCount={currentMethodData.length}\n                      pageSize={pageSize}\n                      currentPage={currentPage}\n                      onPageChange={this.handlePageChange}\n                    />\n                  </div>\n                )}\n                {this.state.currentMethodName.methodName.toLowerCase() ===\n                  \"bet\".toLowerCase() && (\n                  <div className=\"m-0\">\n                    <div style={{ overflowX: \"scroll\" }}>\n                      <table\n                        style={{\n                          overflowX: \"scroll\",\n                          margin: \"0px\",\n                        }}\n                        className=\"table m-0 table-dark table-striped table-bordered\"\n                      >\n                        <thead>\n                          <tr>\n                            <td>Serial</td>\n                            <td>Match Name</td>\n                            <td>Question</td>\n                            <td>Answer</td>\n                            <td>Amount</td>\n                            <td>Return Rate</td>\n                            <td>Return Amount (Won) </td>\n                            <td>Win/Loos</td>\n                            <td>Date & Time</td>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {currentShowData.map(\n                            ({\n                              account,\n                              amount,\n                              method,\n                              status,\n                              superuser_account,\n                              transaction_id,\n                              type,\n                              created_at,\n                              match_name,\n                              choice,\n                              id,\n                              serial,\n                              match_start_time,\n                              question,\n                              return_rate,\n                              winning,\n                              your_answer,\n                              is_winner,\n                              answer,\n                            }) => {\n                              return (\n                                <tr key={id.toString() + choice}>\n                                  <td>{serial}</td>\n                                  <td>\n                                    {match_name}\n                                    <br />\n                                    {match_start_time.split(\" \")[0]} <br />\n                                    {\n                                      match_start_time\n                                        .split(\" \")[1]\n                                        .split(\"+\")[0]\n                                    }\n                                  </td>\n                                  <td>{question}</td>\n                                  <td>{your_answer}</td>\n                                  <td>{amount}</td>\n                                  <td>{return_rate}</td> <td>{winning}</td>{\" \"}\n                                  <td>\n                                    {!is_winner && answer === \"Unknown\" && (\n                                      <span className=\"icofont-man h3 red\">\n                                        <LiveDot />\n                                      </span>\n                                    )}{\" \"}\n                                    {!is_winner && answer !== \"Unknown\" && (\n                                      <span className=\"icofont-ui-close h5 red\"></span>\n                                    )}{\" \"}\n                                    {is_winner === true && (\n                                      <span\n                                        className=\"icofont-trophy m-1 red h5\"\n                                        style={{\n                                          color: \"green\",\n                                          cursor: \"pointer\",\n                                        }}\n                                      ></span>\n                                    )}\n                                  </td>\n                                  <td>\n                                    {created_at.split(\"T\")[0]}\n                                    <br />\n                                    {created_at.split(\"T\")[1].split(\".\")[0]}\n                                  </td>\n                                </tr>\n                              );\n                            }\n                          )}\n                          {!currentShowData && <span>No data fount</span>}\n                        </tbody>\n                      </table>\n                    </div>\n                    <Pagination\n                      onPageChange2={this.handlePageChange2}\n                      itemsCount={currentMethodData.length}\n                      pageSize={pageSize}\n                      currentPage={currentPage}\n                      onPageChange={this.handlePageChange}\n                    />\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default AllTransactions;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getUserByJwt } from \"../services/authServices\";\nimport \"./speacialNavbar.css\";\n\nclass SeacialNavbar extends Component {\n  state = {\n    game_editor: false,\n    admin: false,\n  };\n  componentDidMount() {\n    try {\n      const { game_editor, admin } = getUserByJwt();\n      this.setState({ game_editor, admin });\n    } catch (err) {}\n  }\n  render() {\n    const { game_editor, admin } = this.state;\n    return (\n      <div className=\" sticky gamesSliderBoxx d-flex justify-content-center \">\n        <div>\n          {\" \"}\n          <Link\n            to=\"/\"\n            className=\" sprite icon \"\n            style={{ textDecoration: \"none\" }}\n          >\n            <span className=\"sprite icofont-home\" />\n            <p className=\"sprite-p\">Home</p>\n          </Link>\n        </div>\n        <div>\n          {\" \"}\n          {!admin && (\n            <Link\n              to=\"/profile\"\n              style={{ textDecoration: \"none\" }}\n              className=\" sprite icon \"\n            >\n              <span className=\"sprite icofont-user\" />\n              <p className=\"sprite-p\">Profile</p>\n            </Link>\n          )}\n          {admin && (\n            <Link\n              to=\"/clubprofile\"\n              style={{ textDecoration: \"none\" }}\n              className=\" sprite icon \"\n            >\n              <span className=\"sprite icofont-user\" />\n              <p className=\"sprite-p\">Profile</p>\n            </Link>\n          )}\n        </div>\n        <div>\n          {\" \"}\n          {admin && (\n            <Link\n              to=\"/StatementClub\"\n              style={{ textDecoration: \"none\" }}\n              className=\" sprite icon \"\n            >\n              <span className=\"sprite icofont-chart-bar-graph \" />\n              <p className=\"sprite-p\">Statement</p>\n            </Link>\n          )}\n          {!admin && (\n            <Link\n              to=\"/allTransactions\"\n              style={{ textDecoration: \"none\" }}\n              className=\" sprite icon \"\n            >\n              <span className=\"sprite icofont-chart-bar-graph \" />\n              <p className=\"sprite-p\">Statement</p>\n            </Link>\n          )}\n        </div>\n        {!game_editor && !admin && (\n          <div>\n            {\" \"}\n            <Link\n              to=\"/sponsor\"\n              style={{ textDecoration: \"none\" }}\n              className=\" sprite icon \"\n            >\n              <span className=\"sprite icofont-chart-flow-1 \" />\n              <p className=\"sprite-p\">Sponsor</p>\n            </Link>\n          </div>\n        )}\n        {game_editor && !admin && (\n          <div>\n            {\" \"}\n            <Link\n              to=\"/livegameeditor\"\n              style={{ textDecoration: \"none\" }}\n              className=\" sprite icon \"\n            >\n              <span className=\"sprite icofont-elk\" />\n              <p className=\"sprite-p\">Edit Game</p>\n            </Link>\n          </div>\n        )}\n        {!game_editor && admin && (\n          <div>\n            {\" \"}\n            <Link\n              to=\"/user\"\n              style={{ textDecoration: \"none\" }}\n              className=\" sprite icon \"\n            >\n              <span className=\"sprite icofont-chart-flow-1 \" />\n              <p className=\"sprite-p\">User</p>\n            </Link>\n          </div>\n        )}\n        <div>\n          {\" \"}\n          <Link\n            to=\"/logout\"\n            style={{ textDecoration: \"none\" }}\n            className=\" sprite icon \"\n          >\n            <span className=\"sprite icofont-logout\" />\n            <p className=\"sprite-p\">Log Out</p>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SeacialNavbar;\n","import React from \"react\";\nimport { apiEndPoint } from \"../endPoins\";\nimport { getJwt } from \"../services/userService\";\nimport { Input } from \"./inputHelp\";\nimport TransactionForm from \"./transaction\";\nimport Select from \"react-select\";\nimport http from \"../services/httpServices\";\nimport { toast } from \"react-toastify\";\nimport Loader2 from \"../loader copy\";\nimport {  getUserByJwt } from \"../services/authServices\";\nhttp.setJwtForClub(getJwt());\nhttp.setJwt(getJwt());\n\nclass Transfer extends TransactionForm {\n  state = {\n    data: {\n      amount: \"0\",\n      to: \"\",\n    },\n    options: [],\n    errors: {},\n    isLoading: false,\n    isClub: false,\n    is_club_admin: false,\n  };\n\n  handleSubmit = async (e) => {\n    this.setState({ isLoading: true });\n    e.preventDefault();\n\n\n    try {\n      if (this.state.isClub ) {\n        await http.post(apiEndPoint(\"api/club_transfer/\"), this.state.data);\n        toast.success(\"Transfer success\");\n      } else {\n        await http.post(apiEndPoint(\"api/transfer/\"), this.state.data);\n        toast.success(\"Transfer success\");\n      }\n\n      this.setState({\n        data: { amount: 0, to: this.state.data.to },\n      });\n    } catch (e) {\n      try {\n        toast.error(e.response.data.non_field_errors[0]);\n      } catch (err) {\n        toast.error(\"Unable to transfer money !\");\n      }\n    }\n\n    this.setState({ isLoading: false });\n  };\n  async componentDidMount() {\n    try {\n      try {\n        const { is_club_admin, admin } = getUserByJwt();\n\n        if (admin) {\n          this.setState({ isClub: true });\n        }\n        if (is_club_admin) {\n          this.setState({ is_club_admin: true });\n        }\n      } catch (err) {}\n\n      const res = await http.get(apiEndPoint(\"api/user/?limit=10000\"));\n      const options = res.data.results;\n      options.map((item) => {\n        item.value = item.id;\n        item.label = item.username;\n        return null;\n      });\n      this.setState({ options });\n    } catch (err) {}\n  }\n  handleChange2 = (selectedOption) => {\n    const data = { ...this.state.data };\n    data.to = selectedOption.id;\n\n  \n    this.setState({ data });\n  };\n\n  render() {\n    const { amount } = this.state.data;\n    const { errors, options, isLoading } = this.state;\n    return (\n      <>\n        {isLoading && <Loader2 />}{\" \"}\n        <div className=\"modal fade\" tabIndex=\"-1\" role=\"dialog\" id=\"Transfer\">\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\" style={{ background: \"green\" }}>\n                <h5 className=\"modal-title\">Transfer</h5>\n                <button\n                  type=\"button\"\n                  className=\"close\"\n                  data-dismiss=\"modal\"\n                  aria-label=\"Close\"\n                >\n                  <span className=\"icofont-ui-close btn-my\"></span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form\n                  className=\"rd-form rd-mailform\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div className=\"form-group \">\n                    <label htmlFor=\"to\" style={{ marginBottom: \"10px\" }}>\n                      TO\n                    </label>\n                    <Select\n                      options={options}\n                      name=\"to\"\n                      placeholder=\"To\"\n                      onChange={this.handleChange2}\n                    />\n                  </div>\n                  <Input\n                    placeholder=\"Enter Amount\"\n                    name=\"amount\"\n                    value={amount}\n                    onChange={this.handleChange}\n                    type=\"number\"\n                    errors={errors.amount}\n                    key={\"amount1\"}\n                    min=\"10\"\n                  />\n                  {/* <Input\n                    placeholder=\"Enter Password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={this.handleChange}\n                    type=\"password\"\n                    errors={errors.password}\n                  /> */}\n                  <button\n                    className=\"button button-lg button-primary button-block\"\n                    type=\"submit\"\n                  >\n                    Transfer\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Transfer;\n","import React, { Component } from \"react\";\nimport { apiEndPoint } from \"../endPoins\";\nimport { getUserByJwt, getJwt } from \"../services/authServices\";\nimport axios from \"axios\";\nimport Error404 from \"../404\";\naxios.defaults.headers.common[\"x-auth-token\"] = getJwt();\n\nclass Sponsor extends Component {\n  state = {\n    tableHead: [\n      { id: \"1\", header: \"SN\" },\n      { id: \"2\", header: \"Name\" },\n      { id: \"3\", header: \"UseName\" },\n    ],\n    tableData: [\n      {\n        first_name: \"\",\n        last_name: \"\",\n        username: \"\",\n        serial: \"\",\n      },\n    ],\n    userDetails: {},\n  };\n  async componentDidMount() {\n    try {\n      const userDetails = getUserByJwt();\n      this.setState({ userDetails });\n    } catch (err) {}\n\n    const dataOfUser = await axios.get(apiEndPoint(\"api/user-detail-update/\"));\n    const { refer_set } = dataOfUser.data;\n    refer_set.map((item, index) => {\n      item.serial = index + 1;\n      return null;\n    });\n\n    this.setState({\n      tableData: refer_set,\n      isLoading: false,\n    });\n  }\n  render() {\n    return (\n      <>\n        {this.state.userDetails && (\n          <div className=\"mt-4 container\">\n            <br />\n\n            <div className=\"gamesSliderBox\">\n              <span className=\"sssiloyIconBox sprite isotopeIconBox pt-2\">\n                <span className=\" icofont-chart-flow-1 mb-1\" />\n                <p>Sponsored By You</p>\n              </span>\n            </div>\n            <table\n              className=\"table table-dark table-striped \"\n              style={{ minWidth: \"100%\" }}\n            >\n              <thead>\n                <tr>\n                  {this.state.tableData.length!==0 && this.state.tableHead.map(({ id, header }) => {\n                    return (\n                      <th scope=\"col\" key={id}>\n                        {header}\n                      </th>\n                    );\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.tableData.map(\n                  ({ first_name, serial, username, last_name },index) => {\n                    return (\n                      <tr key={index}>\n                        <td>{serial}</td>\n                        <td>\n                          {first_name} {last_name}\n                        </td>\n                        <td>{username}</td>\n                      </tr>\n                    );\n                  }\n                )}\n              </tbody>\n            </table>\n            {this.state.tableData.length === 0 && (\n              <div className=\"container text-center\">\n                <h5>You have not Refered any one !</h5>\n              </div>\n            )}\n          </div>\n        )}\n        {!this.state.userDetails && <Error404 />}\n      </>\n    );\n  }\n}\n\nexport default Sponsor;\n","import  { Component } from \"react\";\n\nclass Logout extends Component {\n  componentDidMount() {\n    localStorage.removeItem(\"token\");\n    window.location = \"/\";\n}\n\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React, { Component } from \"react\";\n\nimport { apiEndPoint } from \"../endPoins\";\nimport axios from \"axios\";\nimport { getJwt } from \"../services/userService\";\nimport { toast } from \"react-toastify\";\nimport Loader2 from \"../loader copy\";\nimport { Input } from \"../login/inputHelp\";\nimport Joi from \"joi-browser\";\naxios.defaults.headers.common[\"x-auth-token\"] = getJwt();\n\nclass BetUpdate extends Component {\n  state = {\n    data: {\n      question: \"\",\n      option_1: \"\",\n      option_1_rate: \"\",\n      option_2: \"\",\n      option_2_rate: \"\",\n      option_3: \"\",\n      option_3_rate: \"\",\n      option_4: \"\",\n      option_4_rate: \"\",\n      locked: \"\",\n      id: \"\",\n      is_live: \"\",\n      hide: \"\",\n    },\n    lock: [\n      { id: 1, value: true, name: \"true\" },\n      { id: 2, value: false, name: \"false\" },\n    ],\n    errors: [],\n    isDisable: false,\n  };\n  schema = {\n    question: Joi.string().required().label(\"Question\"),\n    option_1: Joi.string().max(1000).required().label(\"Option 1\"),\n    option_1_rate: Joi.number().min(1).required().label(\"Optin 1 Rate\"),\n    option_2: Joi.string().min(1).required().label(\"Option 2\"),\n    option_2_rate: Joi.number().min(1).required().label(\"Option 2 Rate\"),\n    option_3_rate: Joi.number().min(1).label(\"Option 3 rate\"),\n    option_4_rate: Joi.number().min(1).label(\"Option 4 rate\"),\n    option_4: Joi.string().allow(\"\").allow(null).label(\"Option 4\"),\n    option_3: Joi.string().allow(\"\").allow(null).label(\"Option 3\"),\n    is_live: Joi.bool().allow(\"\"),\n    is_locked: Joi.bool().allow(\"\"),\n    id: Joi.number(),\n    hide: Joi.bool(),\n  };\n  componentDidMount() {\n    const data = { ...this.props };\n\n    this.setState({ data });\n  }\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n\n  doSubmit = async (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n\n\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n    this.setState({ isDisable: true });\n    try {\n      const data = { ...this.state.data };\n      data.is_locked = data.is_locked === \"true\";\n      data.hide = data.hide === \"true\";\n      data.locked = data.is_locked;\n      const { id } = this.state.data;\n      await axios.patch(apiEndPoint(\"api/bet_scope/\" + id + \"/\"), data);\n      toast.success(\"Question Updated !\");\n      window.location = \"./livegameeditor\";\n    } catch (err) {\n      try {\n        try {\n          toast.error(err.response.data.bet_scope[0]);\n        } catch (err) {}\n        try {\n          toast.error(err.response.data.non_field_errors[0]);\n        } catch (err) {}\n      } catch (err) {\n        toast.error(\"Sorry please cheack !\");\n      }\n    }\n    this.setState({ isDisable: false });\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data });\n  };\n\n  render() {\n    const {\n      question,\n      option_1,\n      option_1_rate,\n      option_2,\n      option_2_rate,\n      option_3,\n      option_3_rate,\n      option_4,\n      option_4_rate,\n      id,\n    } = this.state.data;\n    const { errors } = this.state;\n    return (\n      <>\n        {\" \"}\n        {this.isDisable && <Loader2 />}\n        {id && (\n          <div\n            className=\"modal fade\"\n            id={\"sportModal\" + id.toString().toLowerCase().trim()}\n            tabIndex=\"-1\"\n            role=\"dialog\"\n          >\n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\" style={{ background: \"green\" }}>\n                  <h5 className=\"modal-title\">Update Question</h5>\n                  <button type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span className=\"icofont-ui-close btn-my\"></span>\n                  </button>\n                </div>\n                <div className=\"justify-content-center modal-body\">\n                  <form className=\"form-group\" onSubmit={this.doSubmit}>\n                    <Input\n                      placeholder=\"Enter question\"\n                      name=\"question\"\n                      value={question}\n                      onChange={this.handleChange}\n                      errors={errors.question}\n                    />\n\n                    <Input\n                      name=\"option_1\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_1}\n                      placeholder=\"Enter Option 1\"\n                      errors={errors.option_1}\n                    />\n                    <Input\n                      name=\"option_1_rate\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_1_rate}\n                      placeholder=\"Enter Option 1 rate\"\n                      type=\"number\"\n                      step=\"any\"\n                      errors={errors.option_1_rate}\n                    />\n                    <Input\n                      name=\"option_2\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_2}\n                      placeholder=\"Enter Option 2\"\n                      errors={errors.option_2}\n                    />\n                    <Input\n                      name=\"option_2_rate\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_2_rate}\n                      placeholder=\"Enter Option 2 Rate\"\n                      type=\"number\"\n                      step=\"any\"\n                      errors={errors.option_2_rate}\n                    />\n                    <Input\n                      name=\"option_3\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_3}\n                      placeholder=\"Enter Option 3\"\n                      errors={errors.option_3}\n                    />\n                    <Input\n                      name=\"option_3_rate\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_3_rate}\n                      placeholder=\"Enter Option 3 Rate\"\n                      type=\"number\"\n                      step=\"any\"\n                      errors={errors.option_3_rate}\n                    />\n                    <Input\n                      name=\"option_4\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_4}\n                      placeholder=\"Enter Option 4\"\n                      errors={errors.option_4}\n                    />\n                    <Input\n                      name=\"option_4_rate\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_4_rate}\n                      placeholder=\"Enter Option 4 Rate\"\n                      type=\"number\"\n                      step=\"any\"\n                      errors={errors.option_4_rate}\n                    />\n\n                    <button\n                      className=\"button button-lg button-primary button-block\"\n                      type=\"submit\"\n                    >\n                      Update Question\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        <></>\n      </>\n    );\n  }\n}\n\nexport default BetUpdate;\n","import React, { Component } from \"react\";\nimport LiveDot from \"../homePage/liveDot\";\nimport axios from \"axios\";\nimport BetUpdate from \"./popUp\";\nimport { apiEndPoint } from \"../endPoins\";\nimport { toast } from \"react-toastify\";\n\nclass GameHelper extends Component {\n  state = {\n    data: {},\n  };\n  componentDidMount() {\n    this.setState({ data: { ...this.props } });\n  }\n  onClickHide = async (e) => {\n    try {\n      const { hide, id } = this.state.data;\n      const value = !(hide === true);\n      await axios.patch(apiEndPoint(\"api/bet_scope/\" + id + \"/\"), {\n        hide: value,\n      });\n      toast.success(\"Question Update !\");\n      const data = { ...this.state.data };\n      data.hide = value;\n      this.setState({ data });\n    } catch (err) {\n      toast.error(\"An error occour\");\n    }\n  };\n  onClickLock = async (e) => {\n    try {\n      const { locked, id } = this.state.data;\n      const value = !(locked === true);\n      await axios.patch(apiEndPoint(\"api/bet_scope/\" + id + \"/\"), {\n        locked: value,\n      });\n      toast.success(\"Question Update !\");\n      const data = { ...this.state.data };\n      data.is_locked = value;\n      this.setState({ data });\n    } catch (err) {\n      toast.error(\"An error occour\");\n    }\n  };\n  render() {\n    const {\n      question,\n      option_1,\n      option_1_rate,\n      option_2,\n      option_2_rate,\n      option_3,\n      option_3_rate,\n      option_4,\n      option_4_rate,\n      is_locked,\n      id,\n      is_live,\n      hide,\n    } = this.state.data;\n\n    const {\n      option1_benefit,\n      option1_bet,\n      option1_bet_count,\n      option2_benefit,\n      option2_bet,\n      option2_bet_count,\n      option3_benefit,\n      option3_bet,\n      option3_bet_count,\n      option4_benefit,\n      option4_bet,\n      option4_bet_count,\n    } = this.props.details;\n\n    return (\n      <>\n        {id && (\n          <>\n            <div className={is_locked ? \" \" : \"\"}>\n              <div className=\"accordion\" id=\"accordionExample\">\n                <div className=\"sport-table-header2\">\n                  <div className={\"sport-table-header2 \"}>\n                    <span className=\"\">\n                      {is_locked && <span className=\"icofont-lock h4\"></span>}\n                      {!is_locked && (\n                        <span className=\"icofont-ui-unlock h4\" />\n                      )}{\" \"}\n                      {!hide && <span className=\"icofont-eye-open h4\" />}\n                      {hide && <span className=\"icofont-eye-blocked h4\" />}{\" \"}\n                      {question}\n                      {is_live && (\n                        <>\n                          <span className=\"bg\">\n                            LIVE <LiveDot />\n                          </span>\n                        </>\n                      )}\n                      {!is_live && (\n                        <>\n                          <span className=\"bg \">\n                            UPCOMING <LiveDot />\n                          </span>\n                        </>\n                      )}\n                      <span\n                        data-toggle=\"modal\"\n                        data-target={\"#sportModal\" + id.toString().trim()}\n                        className=\"liveBox2 LiveBtn2 mr-2 ml-3 p-1\"\n                      >\n                        Update\n                      </span>\n                      {hide && (\n                        <span\n                          onClick={() => this.onClickHide()}\n                          className=\"liveBox2 LiveBtn2 mr-2 ml-3 p-1\"\n                        >\n                          unhide\n                        </span>\n                      )}\n                      {!hide && (\n                        <span\n                          onClick={() => this.onClickHide()}\n                          className=\"liveBox2 LiveBtn2 mr-2 ml-3 p-1\"\n                        >\n                          hide\n                        </span>\n                      )}\n                      {is_locked && (\n                        <span\n                          onClick={() => this.onClickLock()}\n                          className=\"liveBox2 LiveBtn2 mr-2 ml-3 p-1\"\n                        >\n                          unlock\n                        </span>\n                      )}\n                      {!is_locked && (\n                        <span\n                          onClick={() => this.onClickLock()}\n                          className=\"liveBox2 LiveBtn2 mr-2 ml-3 p-1\"\n                        >\n                          lock\n                        </span>\n                      )}\n                    </span>\n                  </div>\n\n                  <div className=\"accordion-collapse collapse show\">\n                    <div className=\"panel-body\" style={{ overflow: \"scroll\" }}>\n                      <table className=\"table table-hover table-dark\">\n                        <thead>\n                          <tr>\n                            <th scope=\"col\">Answer</th>\n                            <th scope=\"col\">Bet Rate</th>\n                            <th scope=\"col\">Place bet</th>\n                            <th scope=\"col\">Betting Amount</th>\n                            <th scope=\"col\">Revenu</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {option_1 && (\n                            <tr>\n                              <td>{option_1}</td>\n                              <td className=\" \">\n                                <p className=\"sport-table-wager-button-count\">\n                                  {option_1_rate}\n                                </p>\n                              </td>\n                              <td>{option1_bet_count}</td>\n                              <td>{option1_bet}</td>\n                              <td>{option1_benefit}</td>\n                            </tr>\n                          )}\n                          {option_2 && (\n                            <tr>\n                              <td>{option_2}</td>\n                              <td className=\" poiner \">\n                                <span className=\"sport-table-wager-button-count\">\n                                  {option_2_rate}\n                                </span>\n                              </td>\n                              <td>{option2_bet_count}</td>\n                              <td>{option2_bet}</td>\n                              <td>{option2_benefit}</td>\n                            </tr>\n                          )}\n                          {option_3 && (\n                            <tr>\n                              <td>{option_3}</td>\n                              <td className=\"\">\n                                <span className=\"sport-table-wager-button-count\">\n                                  {option_3_rate}\n                                </span>\n                              </td>\n                              <td>{option3_bet_count}</td>\n                              <td>{option3_bet}</td>\n                              <td>{option3_benefit}</td>\n                            </tr>\n                          )}\n                          {option_4 && (\n                            <tr>\n                              <td>{option_4}</td>\n                              <td className=\"\">\n                                <span className=\"sport-table-wager-button-count\">\n                                  {option_4_rate}\n                                </span>\n                              </td>\n                              <td>{option4_bet_count}</td>\n                              <td>{option4_bet}</td>\n                              <td>{option4_benefit}</td>\n                            </tr>\n                          )}\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <BetUpdate\n              question={question}\n              option_1={option_1}\n              option_1_rate={option_1_rate}\n              option_2={option_2}\n              option_2_rate={option_2_rate}\n              option_3={option_3}\n              option_3_rate={option_3_rate}\n              option_4={option_4}\n              option_4_rate={option_4_rate}\n              is_locked={is_locked}\n              id={id}\n              is_live={is_live}\n              hide={hide}\n            />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default GameHelper;\n","import React, { Component } from \"react\";\nimport { Input } from \"../login/inputHelp\";\nimport moment from \"moment\";\nimport { apiEndPoint } from \"../endPoins\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport Joi from \"joi-browser\";\nclass CreateMatch extends Component {\n  state = {\n    matchData: {\n      end_time: \"\",\n      game_name: \"\",\n      start_time: \"\",\n      title: \"\",\n    },\n    errors: {\n      end_time: null,\n      start_time: null,\n      title: null,\n      game_name: null,\n    },\n    matchType: [\n      { id: 1, name: \"football\" },\n      { id: 2, name: \"cricket\" },\n      { id: 3, name: \"tennis\" },\n      { id: 4, name: \"others\" },\n    ],\n  };\n  schema = {\n    end_time: Joi.string()\n\n      .min(6)\n      .max(1466)\n      .required()\n      .label(\"End Time\"),\n    start_time: Joi.string().min(3).max(866).required().label(\"Star Time\"),\n    game_name: Joi.string().required().label(\"Game Name\"),\n    title: Joi.string().min(6).required().label(\"Title\"),\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const matchData = { ...this.state.matchData };\n\n    matchData[input.name] = input.value;\n\n    this.setState({ matchData });\n  };\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.matchData, this.schema, options);\n\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n    const matchData = { ...this.state.matchData };\n    const time = moment(matchData.start_time).format();\n    matchData.start_time = time;\n    const time2 = moment(matchData.end_time).format();\n    matchData.end_time = time2;\n    try {\n      await axios.post(apiEndPoint(\"api/match/\"), matchData);\n      toast.success(\"A Match Created\");\n      window.location.reload();\n    } catch (err) {\n      toast.error(\"Can not create a match\");\n    }\n  };\n  render() {\n    const { title, start_time, end_time, game_name } = this.state.matchData;\n    const { errors } = this.state;\n    return (\n      <>\n        <div\n          className=\"modal fade\"\n          id=\"CreateMatch\"\n          tabIndex=\"-1\"\n          role=\"dialog\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\" style={{ background: \"green\" }}>\n                <h5 className=\"modal-title\">Create Match</h5>\n                <button type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span className=\"icofont-ui-close btn-my\"></span>\n                </button>\n              </div>\n              <div className=\"modal-body\">\n                <form\n                  className=\"rd-form rd-mailform\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <Input\n                    placeholder=\"Enter Game Title\"\n                    name=\"title\"\n                    value={title}\n                    onChange={this.handleChange}\n                    errors={errors.title}\n                  />\n                  <Input\n                    name=\"start_time\"\n                    onChange={this.handleChange}\n                    className=\"form-control\"\n                    value={start_time}\n                    placeholder=\"Enter Start Time\"\n                    type=\"datetime-local\"\n                    errors={errors.start_time}\n                  />\n                  <Input\n                    name=\"end_time\"\n                    onChange={this.handleChange}\n                    className=\"form-control\"\n                    value={end_time}\n                    placeholder=\"Enter End Time\"\n                    type=\"datetime-local\"\n                    errors={errors.end_time}\n                  />\n                  <div className=\"form-input form-group mb-4\">\n                    <label htmlFor=\"exampleFormControlSelect1\">\n                      Select Match Type\n                    </label>\n\n                    <select\n                      name=\"game_name\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={game_name}\n                    >\n                      <option key=\"n/a\">Select Match Type</option>\n                      {this.state.matchType.map(({ id, name }) => {\n                        return (\n                          <option value={name} key={id}>\n                            {name.toUpperCase()}\n                          </option>\n                        );\n                      })}\n                    </select>\n                    <small className=\"text-danger\">{errors.game_name}</small>\n                  </div>\n                  <button\n                    className=\"button button-lg button-primary button-block\"\n                    type=\"submit\"\n                  >\n                    Create Match\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default CreateMatch;\n","import React, { Component } from \"react\";\nimport { Input } from \"../login/inputHelp\";\nimport moment from \"moment\";\nimport { apiEndPoint } from \"../endPoins\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport Joi from \"joi-browser\";\nclass UpdateMatch extends Component {\n  state = {\n    matchData: {\n      end_time: \"\",\n      locked: \"\",\n      start_time: \"\",\n      game_name: \"\",\n      title: \"\",\n      id: \"\",\n      hide: \"\",\n    },\n    errors: {\n      end_time: null,\n      start_time: null,\n      title: null,\n      game_name: null,\n    },\n    matchType: [\n      { id: 1, name: \"football\" },\n      { id: 2, name: \"cricket\" },\n      { id: 3, name: \"tennis\" },\n      { id: 4, name: \"others\" },\n    ],\n    lock: [\n      { id: 1, value: true, name: \"true\" },\n      { id: 2, value: false, name: \"false\" },\n    ],\n  };\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.matchData, this.schema, options);\n\n    if (!error) return null;\n\n    const errors = {};\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n  schema = {\n    end_time: Joi.string()\n\n      .min(6)\n      .max(1466)\n      .required()\n      .label(\"End Time\"),\n    start_time: Joi.string()\n\n      .min(3)\n      .max(866)\n      .required()\n      .label(\"Star Time\"),\n    game_name: Joi.string().required().label(\"Game Name\"),\n    title: Joi.string().min(6).required().label(\"Title\"),\n    id: Joi.number().allow(\"\"),\n    locked: Joi.bool(),\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const matchData = { ...this.state.matchData };\n\n    matchData[input.name] = input.value;\n\n    this.setState({ matchData });\n  };\n  componentDidMount() {\n    const matchData = { ...this.props };\n    this.setState({ matchData });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n\n    if (errors) return;\n    const matchData = { ...this.state.matchData };\n    const time = moment(matchData.start_time).format();\n    matchData.start_time = time;\n    const time2 = moment(matchData.end_time).format();\n    matchData.end_time = time2;\n    matchData.locked = matchData.locked === \"true\";\n    try {\n      await axios.patch(\n        apiEndPoint(\"api/match/\" + this.state.matchData.id + \"/\"),\n        matchData\n      );\n      toast.success(\"Match Updated\");\n      window.location.reload();\n    } catch (err) {\n     \n      toast.error(\"Can Updated a match\");\n    }\n  };\n  render() {\n    const { title, start_time, end_time, id } = this.state.matchData;\n    const { errors } = this.state;\n    return (\n      <>\n        <div\n          className=\"modal fade\"\n          id={\"UpdateMatch\" + id.toString().toLowerCase().trim()}\n          tabIndex=\"-1\"\n          role=\"dialog\"\n        >\n          <div className=\"modal-dialog\" role=\"document\">\n            <div className=\"modal-content\">\n              <div className=\"modal-header\" style={{ background: \"green\" }}>\n                <h5 className=\"modal-title\">Update Match</h5>\n                <button type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span className=\"icofont-ui-close btn-my\"></span>\n                </button>\n              </div>\n              <div className=\"justify-content-center modal-body\">\n                <form\n                  className=\"rd-form rd-mailform\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <Input\n                    placeholder=\"Enter Game Title\"\n                    name=\"title\"\n                    value={title}\n                    onChange={this.handleChange}\n                    errors={errors.title}\n                  />\n                  <Input\n                    name=\"start_time\"\n                    onChange={this.handleChange}\n                    className=\"form-control\"\n                    value={start_time.slice(0, 16)}\n                    placeholder=\"Enter Start Time\"\n                    type=\"datetime-local\"\n                    errors={errors.start_time}\n                  />\n                  <Input\n                    name=\"end_time\"\n                    onChange={this.handleChange}\n                    className=\"form-control\"\n                    value={end_time.slice(0, 16)}\n                    placeholder=\"Enter End Time\"\n                    type=\"datetime-local\"\n                    errors={errors.end_time}\n                  />\n\n                  <button\n                    className=\"button button-lg button-primary button-block\"\n                    type=\"submit\"\n                  >\n                    Update Match\n                  </button>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default UpdateMatch;\n","import React, { Component } from \"react\";\nimport { apiEndPoint } from \"../endPoins\";\nimport { getJwt } from \"../services/userService\";\nimport { toast } from \"react-toastify\";\nimport Loader2 from \"../loader copy\";\nimport { Input } from \"../login/inputHelp\";\nimport http from \"../services/httpServices\";\n\nhttp.setJwt(getJwt());\n\nclass CreateMatchQuestion extends Component {\n  state = {\n    data: {\n      question: \"\",\n      option_1: \"\",\n      option_1_rate: 1,\n      option_2: \"\",\n      option_2_rate: 1,\n      option_3: \"\",\n      option_3_rate: 1,\n      option_4: \"\",\n      option_4_rate: 1,\n      is_locked: \"\",\n      id: \"\",\n      is_live: \"\",\n      match: \"\",\n    },\n    errors: {\n      question: \"\",\n      option_1: \"\",\n      option_1_rate: \"\",\n      option_2: \"\",\n      option_2_rate: \"\",\n      option_3: \"\",\n      option_3_rate: \"\",\n      option_4: \"\",\n      option_4_rate: \"\",\n      is_locked: \"\",\n      id: \"\",\n      is_live: \"\",\n      match: \"\",\n    },\n    match: \"\",\n    game_name: \"\",\n    isDisable: false,\n    game_editor: false,\n  };\n\n  componentDidMount() {\n    const { match, game_name } = { ...this.props };\n    \n    this.setState({ match, game_name });\n  }\n\n  doSubmit = async (e) => {\n    this.setState({ isDisable: true });\n    e.preventDefault();\n    try {\n      const data = { ...this.state.data };\n      const id = this.state.match;\n      data.match = id;\n      await http.post(apiEndPoint(\"api/bet_scope/\"), data);\n      toast.success(\"Question Created !\");\n      window.location=\"/livegameeditor\"\n    } catch (err) {\n      try {\n        toast.error(err.response.data.non_field_errors[0]);\n      } catch (err) {}\n    }\n    this.setState({ isDisable: false });\n  };\n\n  handleChange = ({ currentTarget: input }) => {\n    const data = { ...this.state.data };\n    data[input.name] = input.value;\n    this.setState({ data });\n  };\n\n  render() {\n    const {\n      question,\n      option_1,\n      option_1_rate,\n      option_2,\n      option_2_rate,\n      option_3,\n      option_3_rate,\n      option_4,\n      option_4_rate,\n    } = this.state.data;\n    const { errors, match, game_name } = this.state;\n\n    return (\n      <>\n        {\" \"}\n        {this.isDisable && <Loader2 />}\n        {match && (\n          <div\n            className=\"modal fade\"\n            id={(\n              \"CreateMatchQuestion\" +\n              match.toString() +\n              game_name.trim()\n            ).trim()}\n            tabIndex=\"-1\"\n            role=\"dialog\"\n          >\n     \n            <div className=\"modal-dialog\" role=\"document\">\n              <div className=\"modal-content\">\n                <div className=\"modal-header\" style={{ background: \"green\" }}>\n                  <h5 className=\"modal-title\">Add question {game_name}</h5>\n                  <button type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span className=\"icofont-ui-close btn-my\"></span>\n                  </button>\n                </div>\n                <div className=\"justify-content-center modal-body\">\n                  <form className=\"form-group\" onSubmit={this.doSubmit}>\n                    <Input\n                      placeholder=\"Enter question\"\n                      name=\"question\"\n                      value={question}\n                      onChange={this.handleChange}\n                      errors={errors.fullName}\n                    />\n\n                    <Input\n                      name=\"option_1\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_1}\n                      placeholder=\"Enter Option 1\"\n                    />\n                    <Input\n                      name=\"option_1_rate\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_1_rate}\n                      placeholder=\"Enter Option 1 rate\"\n                      type=\"number\"\n                      min=\"1.00\"\n                      step=\"0.01\"\n                    />\n                    <Input\n                      name=\"option_2\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_2}\n                      placeholder=\"Enter Option 2\"\n                    />\n                    <Input\n                      name=\"option_2_rate\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_2_rate}\n                      placeholder=\"Enter Option 2 Rate\"\n                      type=\"number\"\n                      min=\"1.00\"\n                      step=\"0.01\"\n                    />\n                    <Input\n                      name=\"option_3\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_3}\n                      placeholder=\"Enter Option 3\"\n                    />\n                    <Input\n                      name=\"option_3_rate\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_3_rate}\n                      placeholder=\"Enter Option 3 Rate\"\n                      type=\"number\"\n                      min=\"1.00\"\n                      step=\"0.01\"\n                    />\n                    <Input\n                      name=\"option_4\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_4}\n                      placeholder=\"Enter Option 4\"\n                    />\n                    <Input\n                      name=\"option_4_rate\"\n                      onChange={this.handleChange}\n                      className=\"form-control\"\n                      value={option_4_rate}\n                      placeholder=\"Enter Option 4 Rate\"\n                      type=\"number\"\n                      min=\"1.00\"\n                      step=\"0.01\"\n                    />\n                    <button\n                      className=\"button button-lg button-primary button-block\"\n                      type=\"submit\"\n                    >\n                      Add Question\n                    </button>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        <></>\n      </>\n    );\n  }\n}\n\nexport default CreateMatchQuestion;\n","import React, { Component } from \"react\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport axios from \"axios\";\nimport { apiEndPoint } from \"../endPoins\";\nimport \"./style.css\";\n\nimport Loader from \"../loader\";\n\nimport GameHelper from \"./gameHepler\";\nimport CreateMatch from \"./createMatch\";\nimport UpdateMatch from \"./updateMatch copy\";\nimport { toast } from \"react-toastify\";\nimport CreateMatchQuestion from \"./createMatchQuestion\";\nimport { getJwt, getUserByJwt } from \"../services/authServices\";\nimport Error404 from \"../404\";\nimport Loader2 from \"../loader copy\";\nimport http from \"../services/httpServices\";\nhttp.setJwt(getJwt());\n\nclass LiveGameEditor extends Component {\n  state = {\n    currentGameId: \"\",\n    data: [\n      {\n        id: \"0\",\n        game_name: \"\",\n        title: \"\",\n        start_time: \"\",\n        end_time: \"\",\n      },\n    ],\n    game_editor: false,\n    allData: [\n      { id: 5, name: \"All Games\" },\n      { id: 1, name: \"Football\" },\n      { id: 2, name: \"Cricket\" },\n      { id: 3, name: \"Tennis\" },\n      { id: 4, name: \"Others\" },\n    ],\n    nameOfMatchId: [],\n    currentGameName: {\n      gameName: \"All Games\",\n      itemCount: \"\",\n    },\n    announcement: [],\n    currentGameData: [],\n    liveGameId: [],\n    upcommingGameId: [],\n    liveGameData: [],\n    upcommingGameData: [],\n    matchesQuestion: {},\n    matchId: \"\",\n    isLoading: true,\n    isLive: true,\n  };\n  async componentDidMount() {\n    try {\n      const data = await axios.get(apiEndPoint(\"api/match/?active_only=true\"));\n      if (data.data.results.length > 0) {\n        const currentGameName = { ...this.state.currentGameName };\n        const matchesQuestion = {};\n        const liveGameId = [];\n        const upcommingGameId = [];\n        const upcommingGameData = [];\n        const liveGameData = [];\n        const res = await axios.get(apiEndPoint(\"api/bet_scope/\"));\n        for (var item of res.data.results) {\n          if (item.match in matchesQuestion) {\n            matchesQuestion[item.match].push(item);\n          } else {\n            matchesQuestion[item.match] = [];\n            matchesQuestion[item.match].push(item);\n          }\n        }\n        for (var item1 of data.data.results) {\n          if (item1.is_live === true) {\n            liveGameId.push(item1.id);\n          } else {\n            upcommingGameId.push(item1.id);\n          }\n        }\n        for (var item2 of data.data.results) {\n          if (liveGameId.includes(item2.id)) {\n            liveGameData.push(item2);\n          } else {\n            upcommingGameData.push(item2);\n          }\n        }\n\n        this.setState({\n          matchesQuestion,\n          data: data.data.results,\n          currentGameData: liveGameData,\n          currentGameName,\n          upcommingGameId,\n          liveGameId,\n          liveGameData,\n          upcommingGameData,\n          isLive: true,\n        });\n\n        this.setState({\n          isLoading: false,\n        });\n      }\n    } catch (err) {}\n    try {\n      const { game_editor } = getUserByJwt();\n      this.setState({ game_editor });\n    } catch (err) {}\n    this.setState({\n      isLoading: false,\n    });\n  }\n  onClickHide = async ({ id, hide }) => {\n    try {\n      await http.patch(apiEndPoint(\"api/match/\" + id + \"/\"), {\n        hide: !hide,\n      });\n      window.location = \"/livegameeditor\";\n    } catch (err) {\n      toast.error(\"Error Ocur\");\n    }\n  };\n  onClickLock = async ({ id, locked }) => {\n    try {\n      await http.patch(apiEndPoint(\"api/match/\" + id + \"/\"), {\n        locked: !locked,\n      });\n      window.location = \"/livegameeditor\";\n    } catch (err) {\n      toast.error(\"Error Ocur\");\n    }\n  };\n  handleFilter = (name) => {\n    const newData = [...this.state.data];\n    const liveGameId = [...this.state.liveGameId];\n    const upcommingGameId = [...this.state.upcommingGameId];\n    const liveGameItems = [];\n    const upcommingGameItems = [];\n    for (var item of newData) {\n      if (item.game_name.toLowerCase() === name.toLowerCase()) {\n        if (liveGameId.includes(item.id)) {\n          liveGameItems.push(item);\n        } else if (upcommingGameId.includes(item.id)) {\n          upcommingGameItems.push(item);\n        }\n      }\n      if (name.toLowerCase() === \"All Games\".toLowerCase()) {\n        if (liveGameId.includes(item.id)) {\n          liveGameItems.push(item);\n        } else if (upcommingGameId.includes(item.id)) {\n          upcommingGameItems.push(item);\n        }\n      }\n    }\n    const currentGameName = { ...this.state.currentGameName };\n\n    currentGameName.itemCount = liveGameItems.length;\n    currentGameName.gameName = name;\n    this.setState({\n      currentGameData: liveGameItems,\n      currentGameName,\n      liveGameData: liveGameItems,\n      upcommingGameData: upcommingGameItems,\n      isLive: true,\n    });\n  };\n\n  filteredForLive = (name) => {\n    if (name.toLowerCase() === \"upcomming\") {\n\n      this.setState({\n        isLive: false,\n        currentGameData: this.state.upcommingGameData || {},\n      });\n    } else {\n      \n      this.setState({\n        isLive: true,\n        currentGameData: this.state.liveGameData || {},\n      });\n    }\n  };\n\n  render() {\n    const { isLoading, isLive, game_editor } = this.state;\n\n    return (\n      <>\n        {isLoading && <Loader2 />}\n        {game_editor && (\n          <>\n            <div\n              className=\"liveBox2 container mb-2\"\n              style={{ backgroud: \"white\" }}\n            >\n              <span\n                className=\"LiveBtn2\"\n                data-toggle=\"modal\"\n                data-target=\"#CreateMatch\"\n              >\n                Add New Match\n              </span>\n            </div>\n            {isLoading && <Loader />}\n            {!isLoading && (\n              <section className=\"section section-sm \">\n                <div className=\"container\">\n                  <div className=\"gamesSliderBox\">\n                    <Swiper\n                      breakpoints={{\n                        320: {\n                          slidesPerView: 3,\n                          spaceBetween: 0,\n                        },\n\n                        480: {\n                          slidesPerView: 4,\n                          spaceBetween: 0,\n                        },\n\n                        640: {\n                          slidesPerView: 5,\n                          spaceBetween: 0,\n                        },\n                      }}\n                    >\n                      {this.state.allData.map(({ name, id }) => {\n                        return (\n                          <SwiperSlide key={id} className=\"sprite  icon\">\n                            <span\n                              className={\n                                this.state.currentGameName.gameName.toLowerCase() ===\n                                name.toLocaleLowerCase()\n                                  ? \"sprite active icon\"\n                                  : \" sprite  icon\"\n                              }\n                              onClick={() =>\n                                this.handleFilter(name.toLowerCase())\n                              }\n                            >\n                              {name !== \"Cricket\" && (\n                                <span\n                                  className={\n                                    \"sprite icofont-\" + name.toLowerCase()\n                                  }\n                                />\n                              )}\n                              {(name === \"Others\" || name === \"All Games\") && (\n                                <span className=\"sprite icofont-bird-wings \" />\n                              )}\n                              {name === \"Cricket\" && (\n                                <span className=\"sprite icofont-helmet\" />\n                              )}\n                              <span className=\"isotope-filters-list-text\">\n                                {name}\n                              </span>\n                            </span>\n                          </SwiperSlide>\n                        );\n                      })}\n                    </Swiper>\n                  </div>\n                  <div className=\"liveBox\">\n                    <span\n                      className={\n                        !isLive\n                          ? \"col-lg-6 col-md-6 col-sm-6 LiveBtn\"\n                          : \"col-lg-6 col-md-6 col-sm-6 LiveBtn actived\"\n                      }\n                      onClick={() => this.filteredForLive(\"live\")}\n                    >\n                      <span className=\"MuiTab-wrapper\">Live Match </span>\n                    </span>\n                    <span\n                      className={\n                        isLive\n                          ? \"col-lg-6 col-md-6 col-sm-6 LiveBtn\"\n                          : \"col-lg-6 col-md-6 col-sm-6 LiveBtn actived\"\n                      }\n                      onClick={() => this.filteredForLive(\"upcomming\")}\n                    >\n                      <span className=\"MuiTab-wrapper\">Upcoming Match </span>\n                    </span>\n                  </div>\n\n                  <div className=\"accordion \" id=\"accordion\">\n                    {this.state.currentGameData &&\n                      this.state.currentGameData.map(\n                        ({\n                          game_name,\n                          title,\n                          start_time,\n                          end_time,\n                          id,\n                          locked,\n                          hide,\n                        }) => {\n                          return (\n                            <>\n                              <UpdateMatch\n                                id={id}\n                                game_name={game_name}\n                                start_time={start_time}\n                                end_time={end_time}\n                                title={title}\n                                locked={locked}\n                                key={id.toString() + game_name + \"2\"}\n                              />\n                              <CreateMatchQuestion\n                                match={id}\n                                game_name={game_name}\n                                key={id.toString() + game_name + \"1\"}\n                              />\n                              {start_time && (\n                                <div\n                                  className=\"accordion\"\n                                  key={id.toString() + game_name}\n                                >\n                                  <div\n                                    className=\"sport-table-header\"\n                                    id=\"headingOne\"\n                                  >\n                                    <span className=\"mb-0\">\n                                      <span\n                                        data-toggle=\"collapse\"\n                                        data-target={\n                                          \"#collapseOne\" + id + game_name\n                                        }\n                                        aria-expanded=\"true\"\n                                        aria-controls=\"collapseOne\"\n                                      >\n                                        <div className=\"row\">\n                                          <div className=\"col-xl-1 col-lg-1 col-md-1 col-sm-2 col-xs-2\">\n                                            <div className=\"sport-table-icon\">\n                                              <span\n                                                className={\n                                                  \"sprite icofont-bird-wings\"\n                                                }\n                                              />\n                                            </div>\n                                          </div>\n                                          <div className=\"col-xl-11 col-lg-11 col-md-11 col-sm-10 col-xs-10\">\n                                            <span\n                                              style={{\n                                                color: \"\",\n                                                fontWeight: \"bold\",\n                                                display: \"inline-block\",\n                                              }}\n                                            >\n                                              {game_name} : {title}\n                                              <br />\n                                            </span>{\" \"}\n                                            {start_time.split(\"T\")[0]}{\" \"}\n                                            {\n                                              start_time\n                                                .split(\"T\")[1]\n                                                .split(\"+\")[0]\n                                            }\n                                            <div\n                                              className=\"liveBox2 \"\n                                              style={{ backgroud: \"white\" }}\n                                            >\n                                              <span\n                                                className=\"LiveBtn2\"\n                                                data-toggle=\"modal\"\n                                                data-target={\n                                                  \"#UpdateMatch\" +\n                                                  id\n                                                    .toString()\n                                                    .toLowerCase()\n                                                    .trim()\n                                                }\n                                              >\n                                                Update\n                                              </span>\n                                              <span\n                                                className=\"LiveBtn2\"\n                                                data-toggle=\"modal\"\n                                                data-target={(\n                                                  \"#CreateMatchQuestion\" +\n                                                  id.toString() +\n                                                  game_name.trim()\n                                                ).trim()}\n                                              >\n                                                Add QN\n                                              </span>\n                                              {hide && (\n                                                <span\n                                                  onClick={() =>\n                                                    this.onClickHide({\n                                                      id,\n                                                      hide,\n                                                    })\n                                                  }\n                                                  className=\"LiveBtn2\"\n                                                >\n                                                  unhide\n                                                </span>\n                                              )}\n                                              {!hide && (\n                                                <span\n                                                  onClick={() =>\n                                                    this.onClickHide({\n                                                      id,\n                                                      hide,\n                                                    })\n                                                  }\n                                                  className=\"LiveBtn2\"\n                                                >\n                                                  Hide\n                                                </span>\n                                              )}\n                                              {locked && (\n                                                <span\n                                                  onClick={() =>\n                                                    this.onClickLock({\n                                                      id,\n                                                      locked,\n                                                    })\n                                                  }\n                                                  className=\"LiveBtn2\"\n                                                >\n                                                  unLock\n                                                </span>\n                                              )}{\" \"}\n                                              {!locked && (\n                                                <span\n                                                  onClick={() =>\n                                                    this.onClickLock({\n                                                      id,\n                                                      locked,\n                                                    })\n                                                  }\n                                                  className=\"LiveBtn2\"\n                                                >\n                                                  Lock\n                                                </span>\n                                              )}\n                                            </div>\n                                          </div>\n                                        </div>\n                                      </span>\n                                    </span>\n                                  </div>\n                                  <div\n                                    id={\"collapseOne\" + id + game_name}\n                                    className=\"collapse show\"\n                                    aria-labelledby=\"headingOne\"\n                                    data-parent=\"#accordion\"\n                                  >\n                                    <div className=\"panel-body\">\n                                      <div\n                                        className=\"accordion\"\n                                        id=\"accordion2\"\n                                      >\n                                        {this.state.matchesQuestion[id] &&\n                                          this.state.matchesQuestion[id].map(\n                                            ({ question, ...restProps }) => {\n                                              return (\n                                                <GameHelper\n                                                  key={\n                                                    id.toString() +\n                                                    \"*\" +\n                                                    question\n                                                  }\n                                                  {...restProps}\n                                                  question={question}\n                                                  is_live={this.state.isLive}\n                                                />\n                                              );\n                                            }\n                                          )}\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              )}\n                              {!start_time && (\n                                <div>\n                                  <h1>No data found</h1>\n                                </div>\n                              )}\n                            </>\n                          );\n                        }\n                      )}\n                  </div>\n                </div>\n              </section>\n            )}\n            <CreateMatch />\n          </>\n        )}\n        {!game_editor && !isLoading && <Error404 />}\n      </>\n    );\n  }\n}\n\nexport default LiveGameEditor;\n","import React, { Component } from \"react\";\nimport { getJwt } from \"../services/authServices\";\nimport http from \"../services/httpServices\";\nimport { apiEndPoint } from \"../endPoins\";\n\nimport Loader2 from \"../loader copy\";\n\nhttp.setJwtForClub(getJwt());\nclass ClubUser extends Component {\n  state = {\n    tableHead: [\n      { id: \"1\", header: \"SN\" },\n      { id: \"2\", header: \"Name\" },\n      { id: \"3\", header: \"UseName\" },\n      { id: 4, header: \"Join Date\" },\n      { id: 7, header: \" last bet\" },\n      { id: 5, header: \"total_bet\" },\n      { id: 6, header: \"total_commission\" },\n    ],\n    tableData: [\n      {\n        id: 0,\n        username: \"\",\n        first_name: \"\",\n        last_name: \"\",\n        join_date: \"\",\n        last_bet: \"\",\n        full_name: \"\",\n        total_bet: \"\",\n        total_commission: \"\",\n      },\n    ],\n    isLoading: true,\n  };\n  async componentDidMount() {\n    try {\n      this.setState({ isLoading: true });\n      const dataOfUser = await http.get(apiEndPoint(\"api/club-user/\"));\n      const user = dataOfUser.data.results;\n      user.map((item, index) => {\n        item.serial = index + 1;\n        return null;\n      });\n\n      this.setState({ tableData: user });\n    } catch (err) {}\n    this.setState({ isLoading: false });\n  }\n  render() {\n    const { isLoading } = this.state;\n    return (\n      <>\n        {isLoading && <Loader2 />}\n        {!isLoading && (\n          <div className=\"mt-4 container\">\n            <br />\n            <div className=\"gamesSliderBox\">\n              <span className=\"sssiloyIconBox sprite isotopeIconBox pt-2\">\n                <span className=\" icofont-chart-flow-1\" />\n                <p>User Of your</p>\n              </span>\n            </div>\n            <table className=\"table table-dark table-striped \">\n              <thead>\n                <tr>\n                  {this.state.tableHead.map(({ id, header }) => {\n                    return (\n                      <th scope=\"col\" key={id}>\n                        {header}\n                      </th>\n                    );\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.tableData.map(\n                  ({\n                    first_name,\n                    serial,\n                    username,\n                    last_name,\n                    join_date,\n                    last_bet,\n                    total_bet,\n                    total_commission,\n                  }) => {\n                    return (\n                      <tr>\n                        <td>{serial}</td>\n                        <td>\n                          {first_name} {last_name}\n                        </td>\n                        <td>{username}</td>\n                        <td>{join_date && join_date.split(\"T\")[0]}</td>\n                        <td>{last_bet && last_bet.split(\"T\")[0]}</td>\n                        <td>{total_bet}</td>\n                        <td>{total_commission}</td>\n                      </tr>\n                    );\n                  }\n                )}\n              </tbody>\n            </table>\n            {this.state.tableData.length === 0 && (\n              <div className=\"container text-center\">\n                <h5>You Do not have any users !</h5>\n              </div>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ClubUser;\n","import React, { Component } from \"react\";\nimport { getCurrentClub } from \"../services/authServices\";\nimport Loader2 from \"../loader copy\";\nimport Error404 from \"../404\";\nimport Notification from \"../notification/notification\";\n\nclass ClubProfile extends Component {\n  state = {\n    user: [],\n    isLoading: true,\n  };\n  async componentDidMount() {\n    try {\n      const { data } = await getCurrentClub();\n      \n      this.setState({ user: data || {} });\n    } catch (e) {}\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n    const { balance, name } = this.state.user;\n    const { isLoading } = this.state;\n    return (\n      <>\n        {isLoading && <Loader2 />}\n        {!isLoading && name && (\n          <div className=\"card user-card-full\">\n            <div className=\" m-l-0 m-r-0\">\n              <div className=\" bg-c-lite-green user-profile\">\n                <div className=\"card-block text-center text-white\">\n                  <div className=\"m-b-25\">\n                    {\" \"}\n                    <img\n                      src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\n                      className=\"img-radius\"\n                      alt=\"UserProfile\"\n                    />{\" \"}\n                  </div>\n                  <h6 className=\"f-w-600\">\n                    Name : <span className=\"\">{name}</span>\n                  </h6>\n                  <p>\n                    Current Blance :{\" \"}\n                    <span className=\"icofont-taka\"> {balance.toFixed(4)} </span>{\" \"}\n                  </p>\n                  <p\n                    className=\"icofont-notification\"\n                    data-toggle=\"modal\"\n                    data-target=\"#Notifications\"\n                  ></p>\n                  <i className=\" mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16\"></i>\n                </div>\n              </div>\n            </div>{\" \"}\n            <button\n              data-toggle=\"modal\"\n              data-target=\"#Transfer\"\n              className=\"button button-lg button-primary button-block \"\n            >\n              Transfer\n            </button>\n            <Notification />\n          </div>\n        )}\n        {!isLoading && !name && <Error404 />}\n      </>\n    );\n  }\n}\n\nexport default ClubProfile;\n","import React, { Component } from \"react\";\nimport { apiEndPoint } from \"../endPoins\";\nimport Pagination from \"../profile/paginatin\";\nimport { getCurrentClub, getJwt } from \"../services/authServices\";\nimport http from \"../services/httpServices\";\nimport { paginate } from \"../profile/paginationHelper\";\nimport LiveDot from \"../homePage/liveDot\";\nimport Loader2 from \"../loader copy\";\nimport { Swiper } from \"swiper/react\";\nimport { SwiperSlide } from \"swiper/react\";\n\nimport Error404 from \"../404\";\nimport { toast } from \"react-toastify\";\n\nhttp.setJwtForClub(getJwt());\nclass StatementClub extends Component {\n  state = {\n    currentMethodName: {\n      methodName: \"Transaction\",\n      itemCount: \"\",\n    },\n    currentMethodData: [],\n    data: [],\n    data1: [],\n    data2: [],\n    allData: [\n      { id: 6, name: \"Bet\" },\n      { id: 3, name: \"transfer\" },\n      { id: 5, name: \"Transactions\" },\n    ],\n    betData: [],\n    currentPage: 1,\n    pageSize: 10,\n    itemsCount: 0,\n    currentShowData: [],\n    isLoading: true,\n    user: null,\n  };\n  handlePageChange = (page) => {\n    const { currentMethodData, pageSize } = this.state;\n    const currentShowData = paginate(currentMethodData, page, pageSize);\n    this.setState({ currentPage: page, currentShowData });\n  };\n  handlePageChange2 = (value) => {\n    var { currentMethodData, pageSize, currentPage } = this.state;\n    currentPage += value;\n\n    const currentShowData = paginate(currentMethodData, currentPage, pageSize);\n    this.setState({ currentPage, currentShowData });\n  };\n  async componentDidMount() {\n    try {\n      const user = await getCurrentClub();\n      var data = await http.get(apiEndPoint(\"api/club_transactions/\"));\n      var data1 = await http.get(apiEndPoint(\"api/club-bet/\"));\n      var data2 = await http.get(apiEndPoint(\"api/club_transfer/\"));\n\n      data = data.data.results.sort(this.compare);\n      data1 = data1.data.results.sort(this.compare);\n      data2 = data2.data.results.sort(this.compare);\n      this.setState({\n        betData: data1,\n        tableData: data1,\n        data,\n        data1,\n        data2,\n        currentMethodData: data1,\n        itemsCount: data.length,\n        user,\n      });\n      this.handleFilter(\"bet\");\n    } catch (e) {}\n    this.setState({ isLoading: false });\n  }\n  compare = (a, b) => {\n    if (a.created_at > b.created_at) {\n      return -1;\n    }\n    if (a.id > b.id) {\n      return 1;\n    }\n    return 0;\n  };\n  handelDelete = async (id) => {\n    try {\n      const currentMethodData = [...this.state.currentMethodData];\n      const amiPagol = [];\n      for (var item of currentMethodData) {\n        if (item.id !== id) {\n          amiPagol.push(item);\n        }\n      }\n\n      await http.delete(apiEndPoint(\"api/withdraw/\" + id + \"/\"));\n      this.setState({ currentShowData: amiPagol });\n      toast.success(\"Your deposit request has been canceled !\");\n    } catch (err) {\n      console.log(err.response);\n      toast.error(\"Some thing went wrong !\");\n    }\n  };\n  handleFilter = (name) => {\n    var filtered = [];\n    if (\"transfer\".toLowerCase() === name.toLowerCase()) {\n      filtered = [...this.state.data2];\n    } else if (name.toLowerCase() === \"Transactions\".toLocaleLowerCase()) {\n      filtered = [...this.state.data];\n    } else if (name.toLowerCase() === \"bet\") {\n      filtered = [...this.state.data1];\n    }\n    filtered.map((e, index) => {\n      e.serial = index + 1;\n      return null;\n    });\n\n    const currentMethodName = { ...this.state.currentMethodName };\n    currentMethodName.itemCount = filtered.length;\n    currentMethodName.methodName = name;\n    this.setState({\n      currentMethodData: filtered,\n      currentMethodName,\n      currentShowData: filtered.slice(0, this.state.pageSize),\n      currentPage: 1,\n    });\n  };\n\n  render() {\n    const {\n      pageSize,\n      currentPage,\n      currentMethodData,\n      currentShowData,\n      isLoading,\n      user,\n    } = this.state;\n\n    return (\n      <>\n        {isLoading && <Loader2 />}\n        {!user && !isLoading && <Error404 />}\n        {user && (\n          <div>\n            <div className=\"gamesSliderBox m-0\">\n              <Swiper\n                breakpoints={{\n                  320: {\n                    slidesPerView: 3,\n                    spaceBetween: 0,\n                  },\n\n                  480: {\n                    slidesPerView: 3,\n                    spaceBetween: 0,\n                  },\n\n                  640: {\n                    slidesPerView: 3,\n                    spaceBetween: 0,\n                  },\n                }}\n              >\n                {\" \"}\n                {this.state.allData.map(({ name, id }) => {\n                  return (\n                    <SwiperSlide key={id} className=\"sprite icon\">\n                      <span\n                        onClick={() => this.handleFilter(name.toLowerCase())}\n                        className={\n                          this.state.currentMethodName.methodName.toLowerCase() ===\n                          name.toLocaleLowerCase()\n                            ? \"sprite active icon\"\n                            : \" sprite icon\"\n                        }\n                      >\n                        {name.toLowerCase() ===\n                          \"Transactions\".toLowerCase() && (\n                          <span className=\"sprite icofont-coins\" />\n                        )}\n                        {name.toLowerCase() === \"Bet\".toLowerCase() && (\n                          <span className=\"sprite icofont-bitcoin\" />\n                        )}\n                        {name.toLowerCase() === \"Withdraw\".toLowerCase() && (\n                          <span className=\"sprite icofont-taka-minus\" />\n                        )}\n                        {name.toLowerCase() === \"deposit\".toLowerCase() && (\n                          <span className=\"sprite icofont-taka-plus\" />\n                        )}\n                        {name.toLowerCase() === \"transfer\".toLowerCase() && (\n                          <span className=\"sprite icofont-zigzag\" />\n                        )}\n\n                        <p>{name.toUpperCase()}</p>\n                      </span>\n                    </SwiperSlide>\n                  );\n                })}\n              </Swiper>\n            </div>\n            {!isLoading && (\n              <>\n                {this.state.currentMethodName.methodName.toLowerCase() ===\n                  \"Transactions\".toLowerCase() && (\n                  <>\n                    <div>\n                      <table\n                        style={{\n                          overflowX: \"scroll\",\n                          margin: \"0px\",\n                        }}\n                        className=\"table  m-0 table-dark table-striped table-bordered\"\n                      >\n                        <thead className=\"bg-dark\">\n                          <tr id=\"1xx1x1x1x11\">\n                            <td>Serial</td>\n                            <td>Date & Time</td>\n                            <td>Description</td>\n                            <td>Debit (Out)</td>\n                            <td>Credit (In)</td>\n                            <td>Balance</td>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {currentShowData.map(\n                            (\n                              {\n                                account,\n                                amount,\n                                method,\n                                status,\n                                superuser_account,\n                                transaction_id,\n                                type,\n                                created_at,\n                                serial,\n                                id,\n                                user_balance,\n                                match_start_time,\n                                description,\n                                debit,\n                                credit,\n                              },\n                              index\n                            ) => {\n                              return (\n                                <tr key={id.toString() + type}>\n                                  <td>{serial}</td>\n                                  <td>\n                                    {created_at && created_at.split(\"T\")[0]}\n                                    <br />\n                                    {created_at &&\n                                      created_at.split(\"T\")[1].split(\".\")[0]}\n                                  </td>\n                                  <td>{description}</td>\n                                  <td>{debit}</td>\n                                  <td>{credit}</td>\n                                  <td>{user_balance}</td>\n                                </tr>\n                              );\n                            }\n                          )}\n                          {!currentShowData && <span>No data fount</span>}\n                        </tbody>\n                      </table>\n                      <Pagination\n                        onPageChange2={this.handlePageChange2}\n                        itemsCount={currentMethodData.length}\n                        pageSize={pageSize}\n                        currentPage={currentPage}\n                        onPageChange={this.handlePageChange}\n                      />\n                    </div>\n                  </>\n                )}\n\n                {this.state.currentMethodName.methodName.toLowerCase() ===\n                  \"transfer\".toLowerCase() && (\n                  <div>\n                    <div\n                      style={{ overflowX: \"scroll\", scrollbarWidth: \"none\" }}\n                    >\n                      <table className=\"table m-0 table-dark table-striped table-bordered\">\n                        <thead>\n                          <tr>\n                            <td>Serial</td>\n                            <td>Date & Time</td>\n                            <td>Description</td>\n                            <td>To</td>\n\n                            <td>Amount</td>\n                            <td>Balance</td>\n                            <td>Status</td>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {currentShowData.map(\n                            ({\n                              account,\n                              amount,\n                              method,\n                              status,\n                              superuser_account,\n                              transaction_id,\n                              type,\n                              created_at,\n\n                              id,\n                              serial,\n                              user_balance,\n                              description,\n                              to,\n                              club_balance,\n                            }) => {\n                              return (\n                                <tr key={id.toString() + type}>\n                                  <td>{serial}</td>\n                                  <td>\n                                    {created_at.split(\"T\")[0]} <br />\n                                    {created_at.split(\"T\")[1].split(\".\")[0]}\n                                  </td>\n                                  <td>transfer</td>\n                                  <td>{to}</td>\n                                  <td>{amount}</td>\n                                  <td>{club_balance}</td>\n\n                                  <td>verified</td>\n                                </tr>\n                              );\n                            }\n                          )}\n                          {!currentShowData && <span>No data fount</span>}\n                        </tbody>\n                      </table>\n                    </div>\n                    <Pagination\n                      itemsCount={currentMethodData.length}\n                      pageSize={pageSize}\n                      currentPage={currentPage}\n                      onPageChange={this.handlePageChange}\n                      onPageChange2={this.handlePageChange2}\n                    />\n                  </div>\n                )}\n                {this.state.currentMethodName.methodName.toLowerCase() ===\n                  \"bet\".toLowerCase() && (\n                  <div className=\"m-0\">\n                    <div style={{ overflowX: \"scroll\" }}>\n                      <table\n                        style={{\n                          overflowX: \"scroll\",\n                          margin: \"0px\",\n                        }}\n                        className=\"table m-0 table-dark table-striped table-bordered\"\n                      >\n                        <thead>\n                          <tr>\n                            <td>Serial</td>\n                            <td>Match Name</td>\n                            <td>User</td>\n                            <td>Question</td>\n                            <td>Answer</td>\n                            <td>Amount</td>\n                            <td>Return Rate</td>\n                            <td>Return Amount (Won) </td>\n                            <td>Win/Loos</td>\n                            <td>Date & Time</td>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {currentShowData !== 0 &&\n                            currentShowData.map(\n                              ({\n                                account,\n                                amount,\n                                method,\n                                status,\n                                superuser_account,\n                                transaction_id,\n                                type,\n                                created_at,\n                                match_name,\n                                choice,\n                                id,\n                                serial,\n                                match_start_time,\n                                question,\n                                return_rate,\n                                winning,\n                                your_answer,\n                                is_winner,\n                                answer,\n                                user,\n                                user_details,\n                              }) => {\n                                return (\n                                  <tr key={id.toString() + choice}>\n                                    <td>{serial}</td>\n                                    <td>\n                                      {match_name}\n                                      <br />\n                                      {match_start_time.split(\" \")[0]} <br />\n                                      {\n                                        match_start_time\n                                          .split(\" \")[1]\n                                          .split(\"+\")[0]\n                                      }\n                                    </td>\n                                    <td>{user_details.username}</td>\n                                    <td>{question}</td>\n                                    <td>{your_answer}</td>\n                                    <td>{amount}</td>\n                                    <td>{return_rate}</td> <td>{winning}</td>{\" \"}\n                                    <td>\n                                      {!is_winner && answer === \"Unknown\" && (\n                                        <span className=\"icofont-man h3 red\">\n                                          <LiveDot />\n                                        </span>\n                                      )}{\" \"}\n                                      {!is_winner && answer !== \"Unknown\" && (\n                                        <span className=\"icofont-ui-close h5 red\"></span>\n                                      )}{\" \"}\n                                      {is_winner === true && (\n                                        <span\n                                          className=\"icofont-trophy m-1 red h5\"\n                                          style={{\n                                            color: \"green\",\n                                            cursor: \"pointer\",\n                                          }}\n                                        ></span>\n                                      )}\n                                    </td>\n                                    <td>\n                                      {created_at.split(\"T\")[0]}\n                                      <br />\n                                      {created_at.split(\"T\")[1].split(\".\")[0]}\n                                    </td>\n                                  </tr>\n                                );\n                              }\n                            )}\n                          {!currentShowData && <span>No data fount</span>}\n                        </tbody>\n                      </table>\n                    </div>\n                    <Pagination\n                      onPageChange2={this.handlePageChange2}\n                      itemsCount={currentMethodData.length}\n                      pageSize={pageSize}\n                      currentPage={currentPage}\n                      onPageChange={this.handlePageChange}\n                    />\n                  </div>\n                )}\n              </>\n            )}\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default StatementClub;\n","import React, { Component } from \"react\";\nimport Footer from \"./footer/footer\";\nimport HomePage from \"./homePage/homePage\";\nimport Navbar from \"./navBar/navBar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./login/login\";\nimport Register from \"./login/register\";\nimport Profile from \"./profile/profile\";\nimport Betting from \"./profile/bettings\";\nimport AllTransactions from \"./profile/allTransactions\";\nimport Deposite from \"./login/deposite\";\nimport WithDeaw from \"./login/withDraw\";\nimport SeacialNavbar from \"./footer/speacialNavbar\";\nimport Transfer from \"./login/transfer\";\nimport Sponsor from \"./statement/sponser\";\nimport Logout from \"./login/logout\";\nimport { ToastContainer } from \"react-toastify\";\nimport { getUserByJwt } from \"./services/authServices\";\nimport LiveGameEditor from \"./gameEditor/gameEditor\";\nimport Error404 from \"./404\";\nimport ClubUser from \"./club/clubUser\";\nimport ClubProfile from \"./club/clubProfile\";\nimport StatementClub from \"./club/statement\";\n\nclass App extends Component {\n  state = {\n    user: {\n      email: null,\n      first_name: null,\n      game_editor: null,\n      id: null,\n      is_superuser: null,\n      last_name: null,\n      phone: null,\n      referred_by: null,\n      username: null,\n      admin: null,\n    },\n  };\n  componentDidMount() {\n    try {\n      const user = getUserByJwt();\n      if (user) {\n        this.setState({ user });\n      }\n    } catch (err) {}\n  }\n  render() {\n    const { id } = this.state.user;\n\n    return (\n      <Router>\n        <div className=\"\" style={{ minHeight: \"100vh\", background: \"\" }}>\n          <Navbar userId={id} />\n\n          <Switch>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/betting\" exact={true}>\n              <Betting />\n            </Route>\n            <Route path=\"/allTransactions\" exact={true}>\n              <AllTransactions />\n            </Route>\n            <Route path=\"/StatementClub\">\n              <StatementClub />\n            </Route>\n            <Route path=\"/betting/:id\" exact={true}>\n              <Betting />\n            </Route>\n            <Route path=\"/logout\">\n              <Logout />\n            </Route>\n            <Route path=\"/liveGameeditor\">\n              <LiveGameEditor />\n            </Route>\n            <Route path=\"/user\">\n              <ClubUser />\n            </Route>\n            <Route path=\"/\" exact={true}>\n              <HomePage />\n            </Route>\n            <Route path=\"/sponsor\">\n              <Sponsor />\n            </Route>\n            <Route path=\"/clubprofile\">\n              <ClubProfile />\n            </Route>\n            <Route path=\"/\">\n              <Error404 />\n            </Route>\n          </Switch>\n          <Login />\n          <Register />\n          <Deposite />\n          <WithDeaw />\n          <Transfer />\n        </div>\n        <Footer />\n        <ToastContainer />\n        {this.state.user.id && <SeacialNavbar />}\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"jquery/dist/jquery.min.js\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"./icofont/icofont.min.css\";\nimport \"./homePage/homePage.css\";\nimport \"./profile/profile.css\";\nimport \"swiper/components/navigation/navigation.min.css\";\nimport \"swiper/swiper.scss\";\nimport \"./inPlay/inPlay.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"swiper/components/navigation/navigation.min.css\";\nimport \"swiper/swiper.scss\";\nimport \"./index.css\";\nimport \"./homePage/homePage.css\"\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}